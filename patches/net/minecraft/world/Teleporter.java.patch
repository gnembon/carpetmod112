--- ../src-base/minecraft/net/minecraft/world/Teleporter.java
+++ ../src-work/minecraft/net/minecraft/world/Teleporter.java
@@ -1,25 +1,36 @@
 package net.minecraft.world;
 
+import carpet.CarpetSettings;
+import carpet.logging.LoggerRegistry;
+import carpet.logging.logHelpers.PortalCaching;
+import carpet.mixin.accessors.NetHandlerPlayServerAccessor;
 import it.unimi.dsi.fastutil.longs.Long2ObjectMap;
 import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;
 import it.unimi.dsi.fastutil.objects.ObjectIterator;
-import java.util.Random;
 import net.minecraft.block.BlockPortal;
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.block.state.pattern.BlockPattern;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.init.Blocks;
+import net.minecraft.network.NetHandlerPlayServer;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.ChunkPos;
 import net.minecraft.util.math.MathHelper;
+import net.minecraft.util.math.Vec3d;
 
+import java.util.ArrayList;
+import java.util.Random;
+
 public class Teleporter
 {
     private final WorldServer field_85192_a;
     private final Random field_77187_a;
     private final Long2ObjectMap<Teleporter.PortalPosition> field_85191_c = new Long2ObjectOpenHashMap<Teleporter.PortalPosition>(4096);
+    //CM var
+    private final Long2ObjectMap<Teleporter.PortalPosition> destinationHistoryCache = new Long2ObjectOpenHashMap(4096); //carpet mod
 
     public Teleporter(WorldServer p_i1963_1_)
     {
@@ -74,6 +85,7 @@
         int j = MathHelper.func_76128_c(p_180620_1_.field_70165_t);
         int k = MathHelper.func_76128_c(p_180620_1_.field_70161_v);
         boolean flag = true;
+        boolean flag_cm = true; // CM
         BlockPos blockpos = BlockPos.field_177992_a;
         long l = ChunkPos.func_77272_a(j, k);
 
@@ -85,8 +97,20 @@
             teleporter$portalposition.field_85087_d = this.field_85192_a.func_82737_E();
             flag = false;
         }
-        else
+        else if (CarpetSettings.portalCaching && this.destinationHistoryCache.containsKey(l)) // potential best candidate for linkage.
         {
+            Teleporter.PortalPosition teleporter$portalposition_cm = (Teleporter.PortalPosition)this.destinationHistoryCache.get(l);
+            if (this.field_85192_a.func_180495_p(teleporter$portalposition_cm).func_177230_c() == Blocks.field_150427_aO)
+            //just to verify nobody is cheating the system with update suppression
+            {
+                d0 = 0.0D;
+                blockpos = teleporter$portalposition_cm;
+                flag_cm = false;
+            }
+        }
+            /* end */
+        if (d0 < 0.0D)
+        {
             BlockPos blockpos3 = new BlockPos(p_180620_1_);
 
             for (int i1 = -128; i1 <= 128; ++i1)
@@ -123,8 +147,15 @@
         {
             if (flag)
             {
-                this.field_85191_c.put(l, new Teleporter.PortalPosition(blockpos, this.field_85192_a.func_82737_E()));
+                this.field_85191_c.put(l, new Teleporter.PortalPosition(blockpos, this.field_85192_a.func_82737_E(), new Vec3d(p_180620_1_.field_70165_t, p_180620_1_.field_70163_u, p_180620_1_.field_70161_v)));
             }
+            /* carpet mod */
+            if (CarpetSettings.portalCaching && (flag || flag_cm))
+            {
+                //its timeless
+                this.destinationHistoryCache.put(l, new Teleporter.PortalPosition(blockpos, 0L, new Vec3d(p_180620_1_.field_70165_t, p_180620_1_.field_70163_u, p_180620_1_.field_70161_v)));
+            }
+            /* carpet mod end */
 
             double d5 = (double)blockpos.func_177958_n() + 0.5D;
             double d7 = (double)blockpos.func_177952_p() + 0.5D;
@@ -137,14 +168,35 @@
             {
                 ++d2;
             }
-
+            
+            //CM portalSuffocationFix
+            //removed offset calculation outside of the if statement
+            double offset = (1.0D - p_180620_1_.func_181014_aG().field_72450_a) * (double)blockpattern$patternhelper.func_181118_d() * (double)blockpattern$patternhelper.func_177669_b().func_176746_e().func_176743_c().func_179524_a();
+            if (CarpetSettings.portalSuffocationFix)
+            {
+                double entity_corrected_radius = 1.02*(double)p_180620_1_.field_70130_N/2;
+                if (entity_corrected_radius >= (double)blockpattern$patternhelper.func_181118_d()-entity_corrected_radius)
+                {
+                    //entity is wider than portal, so will suffocate anyways, so place it directly in the middle
+                    entity_corrected_radius = (double)blockpattern$patternhelper.func_181118_d()/2-0.001;
+                }
+                    
+                if (offset >= 0)
+                {
+                    offset = MathHelper.func_151237_a(offset, entity_corrected_radius, (double)blockpattern$patternhelper.func_181118_d()-entity_corrected_radius);
+                }
+                else
+                {
+                    offset = MathHelper.func_151237_a(offset, -(double)blockpattern$patternhelper.func_181118_d()+entity_corrected_radius, -entity_corrected_radius);
+                }
+            }
             if (blockpattern$patternhelper.func_177669_b().func_176740_k() == EnumFacing.Axis.X)
             {
-                d7 = d2 + (1.0D - p_180620_1_.func_181014_aG().field_72450_a) * (double)blockpattern$patternhelper.func_181118_d() * (double)blockpattern$patternhelper.func_177669_b().func_176746_e().func_176743_c().func_179524_a();
+                d7 = d2 + offset;
             }
             else
             {
-                d5 = d2 + (1.0D - p_180620_1_.func_181014_aG().field_72450_a) * (double)blockpattern$patternhelper.func_181118_d() * (double)blockpattern$patternhelper.func_177669_b().func_176746_e().func_176743_c().func_179524_a();
+                d5 = d2 + offset;
             }
 
             float f = 0.0F;
@@ -182,6 +234,13 @@
             if (p_180620_1_ instanceof EntityPlayerMP)
             {
                 ((EntityPlayerMP)p_180620_1_).field_71135_a.func_147364_a(d5, d6, d7, p_180620_1_.field_70177_z, p_180620_1_.field_70125_A);
+                /*
+                 * Resets the players postion after move to fix a bug created in the teleportation. CARPET-XCOM
+                 */
+                if(CarpetSettings.portalTeleportationFix )
+                {
+                    ((NetHandlerPlayServerAccessor) ((EntityPlayerMP)p_180620_1_).field_71135_a).invokeCaptureCurrentPosition();
+                }
             }
             else
             {
@@ -395,6 +454,12 @@
                 }
             }
         }
+        /* carpet mod */
+        if (CarpetSettings.portalCaching)
+        {
+            clearHistoryCache();
+        }
+        /* carpet mod */
 
         return true;
     }
@@ -405,27 +470,60 @@
         {
             long i = p_85189_1_ - 300L;
             ObjectIterator<Teleporter.PortalPosition> objectiterator = this.field_85191_c.values().iterator();
-
+            ArrayList<Vec3d> uncachings = new ArrayList<>();
             while (objectiterator.hasNext())
             {
                 Teleporter.PortalPosition teleporter$portalposition = (Teleporter.PortalPosition)objectiterator.next();
 
                 if (teleporter$portalposition == null || teleporter$portalposition.field_85087_d < i)
                 {
+                    uncachings.add(teleporter$portalposition.cachingCoords);
                     objectiterator.remove();
                 }
             }
+            /* carpet mod */
+            //failsafe - arbitrary, but will never happen in normal circumstances, 
+            //but who knows these freekin players.
+            if (CarpetSettings.portalCaching && this.destinationHistoryCache.size()> 65000 )
+            {
+                removeAllCachedEntries();
+            }
+
+            // Log portal uncaching CARPET-XCOM
+            if(LoggerRegistry.__portalCaching) {
+                PortalCaching.portalCachingCleared(field_85192_a, field_85191_c.size(), uncachings);
+            }
+            /* carpet mod end */
         }
     }
+    
+    //carpet mod
+    public void clearHistoryCache()
+    {
+        MinecraftServer minecraftserver = this.field_85192_a.func_73046_m();
+        for (int i=-1; i<2; i++)
+        {
+            WorldServer s = minecraftserver.func_71218_a(i);
+            s.func_85176_s().removeAllCachedEntries();
+        }
+    }
+    
+    //carpet mod
+    public void removeAllCachedEntries()
+    {
+        this.destinationHistoryCache.clear();
+    }
 
     public class PortalPosition extends BlockPos
     {
         public long field_85087_d;
+        public Vec3d cachingCoords;
 
-        public PortalPosition(BlockPos p_i45747_2_, long p_i45747_3_)
+        public PortalPosition(BlockPos pos, long lastUpdate, Vec3d vec)
         {
-            super(p_i45747_2_.func_177958_n(), p_i45747_2_.func_177956_o(), p_i45747_2_.func_177952_p());
-            this.field_85087_d = p_i45747_3_;
+            super(pos.func_177958_n(), pos.func_177956_o(), pos.func_177952_p());
+            cachingCoords = vec;
+            this.field_85087_d = lastUpdate;
         }
     }
 }
