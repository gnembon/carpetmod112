--- ../src-base/minecraft/net/minecraft/world/WorldServer.java
+++ ../src-work/minecraft/net/minecraft/world/WorldServer.java
@@ -80,6 +80,12 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import carpet.CarpetSettings;
+import carpet.helpers.RandomTickOptimization;
+import carpet.helpers.TickSpeed;
+import carpet.utils.Waypoint;
+import carpet.helpers.ScheduledBlockEventSerializer;
+
 public class WorldServer extends World implements IThreadListener
 {
     private static final Logger field_147491_a = LogManager.getLogger();
@@ -99,6 +105,8 @@
     private int field_147489_T;
     private final List<NextTickListEntry> field_94579_S = Lists.<NextTickListEntry>newArrayList();
 
+    public static boolean loginMinecartFix = false;
+
     public WorldServer(MinecraftServer p_i45921_1_, ISaveHandler p_i45921_2_, WorldInfo p_i45921_3_, int p_i45921_4_, Profiler p_i45921_5_)
     {
         super(p_i45921_2_, p_i45921_3_, DimensionType.func_186069_a(p_i45921_4_).func_186070_d(), p_i45921_5_, false);
@@ -184,12 +192,16 @@
             this.func_73053_d();
         }
 
+        if (TickSpeed.process_entities)
+        {// extra indent
+
         this.field_72984_F.func_76320_a("mobSpawner");
 
         if (this.func_82736_K().func_82766_b("doMobSpawning") && this.field_72986_A.func_76067_t() != WorldType.field_180272_g)
         {
             this.field_175742_R.func_77192_a(this, this.field_72985_G, this.field_72992_H, this.field_72986_A.func_82573_f() % 400L == 0L);
         }
+        }//end indent
 
         this.field_72984_F.func_76318_c("chunkSource");
         this.field_73020_y.func_73156_b();
@@ -200,6 +212,8 @@
             this.func_175692_b(j);
         }
 
+        if (TickSpeed.process_entities)
+        { // CM extra indent
         this.field_72986_A.func_82572_b(this.field_72986_A.func_82573_f() + 1L);
 
         if (this.func_82736_K().func_82766_b("doDaylightCycle"))
@@ -209,15 +223,18 @@
 
         this.field_72984_F.func_76318_c("tickPending");
         this.func_72955_a(false);
+		}
         this.field_72984_F.func_76318_c("tickBlocks");
         this.func_147456_g();
         this.field_72984_F.func_76318_c("chunkMap");
         this.field_73063_M.func_72693_b();
+        if (TickSpeed.process_entities) { // CM indent
         this.field_72984_F.func_76318_c("village");
         this.field_72982_D.func_75544_a();
         this.field_175740_d.func_75528_a();
         this.field_72984_F.func_76318_c("portalForcer");
         this.field_85177_Q.func_85189_a(this.func_82737_E());
+        }
         this.field_72984_F.func_76319_b();
         this.func_147488_Z();
     }
@@ -255,8 +272,15 @@
                     ++j;
                 }
             }
-
-            this.field_73068_P = j > 0 && j >= this.field_73010_i.size() - i;
+            int sleepingThreshold = CarpetSettings.sleepingThreshold;
+            if(sleepingThreshold < 100)
+            { // custom amount
+                field_73068_P = j > 0;
+            }
+            else
+            { // vanilla - all
+                field_73068_P = j > 0 && j >= this.field_73010_i.size() - i;
+            }
         }
     }
 
@@ -287,6 +311,28 @@
     {
         if (this.field_73068_P && !this.field_72995_K)
         {
+            //CM sleeping
+            int sleepingThreshold = CarpetSettings.sleepingThreshold;
+            if(sleepingThreshold < 100)
+            {
+                float numberOfPlayers = 0;
+                float sleepingPlayerCount = 0;
+
+                for (EntityPlayer entityplayer : this.field_73010_i)
+                {
+                    if (!entityplayer.func_175149_v())
+                    {
+                        numberOfPlayers++;
+                        if (entityplayer.func_71026_bH())
+                        {
+                            sleepingPlayerCount++;
+                        }
+                    }
+                }
+                return sleepingThreshold <= (int) ((sleepingPlayerCount / numberOfPlayers) * 100);
+            }
+            //CM end
+            // Vanilla
             for (EntityPlayer entityplayer : this.field_73010_i)
             {
                 if (!entityplayer.func_175149_v() && !entityplayer.func_71026_bH())
@@ -344,6 +390,7 @@
             boolean flag = this.func_72896_J();
             boolean flag1 = this.func_72911_I();
             this.field_72984_F.func_76320_a("pollingChunks");
+            boolean overworldIceOnly = !CarpetSettings.enableStableLCGNetherEnd || field_73011_w.func_186058_p().func_186068_a() == 0; // Rule to disable nether and end ice snow and lightning Carpet-XCOM
 
             for (Iterator<Chunk> iterator = this.field_73063_M.func_187300_b(); iterator.hasNext(); this.field_72984_F.func_76319_b())
             {
@@ -355,9 +402,14 @@
                 chunk.func_76594_o();
                 this.field_72984_F.func_76318_c("tickChunk");
                 chunk.func_150804_b(false);
+                if (!TickSpeed.process_entities)
+                { // skipping the rest of the block processing
+                    this.field_72984_F.func_76319_b();
+                    continue;
+                }
                 this.field_72984_F.func_76318_c("thunder");
 
-                if (flag && flag1 && this.field_73012_v.nextInt(100000) == 0)
+                if (overworldIceOnly && flag && flag1 && this.field_73012_v.nextInt(100000) == 0)
                 {
                     this.field_73005_l = this.field_73005_l * 3 + 1013904223;
                     int l = this.field_73005_l >> 2;
@@ -385,7 +437,7 @@
 
                 this.field_72984_F.func_76318_c("iceandsnow");
 
-                if (this.field_73012_v.nextInt(16) == 0)
+                if (overworldIceOnly && this.field_73012_v.nextInt(16) == 0)
                 {
                     this.field_73005_l = this.field_73005_l * 3 + 1013904223;
                     int j2 = this.field_73005_l >> 2;
@@ -503,9 +555,10 @@
                     {
                         iblockstate.func_177230_c().func_180650_b(this, p_175654_1_, iblockstate, this.field_73012_v);
                     }
+                    if(RandomTickOptimization.needsWorldGenFix) return;
                 }
 
-                return;
+                if(!RandomTickOptimization.needsWorldGenFix) return;
             }
 
             p_175654_3_ = 1;
@@ -950,11 +1003,18 @@
 
             chunkproviderserver.func_186027_a(p_73044_1_);
 
+            if (CarpetSettings.simulatePermaloader) chunkproviderserver.fakePermaloaderProtected = true;
             for (Chunk chunk : Lists.newArrayList(chunkproviderserver.func_189548_a()))
             {
-                if (chunk != null && !this.field_73063_M.func_152621_a(chunk.field_76635_g, chunk.field_76647_h))
+                if (chunk != null /*&& !this.playerChunkMap.contains(chunk.x, chunk.z)*/) // CM: moved test to below
                 {
+                    if (!this.field_73063_M.func_152621_a(chunk.field_76635_g, chunk.field_76647_h))
                     chunkproviderserver.func_189549_a(chunk);
+                    else if (CarpetSettings.whereToChunkSavestate.canUnloadNearPlayers)
+                    {
+                        chunkproviderserver.func_189549_a(chunk);
+                        chunk.field_189550_d = false;
+                    }
                 }
             }
         }
@@ -1033,6 +1093,10 @@
                 }
                 else
                 {
+                    if(loginMinecartFix) {
+                        entity.field_70128_L = true;
+                        return true;
+                    }
                     if (!(p_184165_1_ instanceof EntityPlayer))
                     {
                         field_147491_a.warn("Keeping entity {} that already exists with UUID {}", EntityList.func_191301_a(entity), uuid.toString());
