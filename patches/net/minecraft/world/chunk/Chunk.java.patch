--- ../src-base/minecraft/net/minecraft/world/chunk/Chunk.java
+++ ../src-work/minecraft/net/minecraft/world/chunk/Chunk.java
@@ -3,10 +3,8 @@
 import com.google.common.base.Predicate;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Queues;
-import java.util.Arrays;
-import java.util.List;
-import java.util.Map;
-import java.util.Random;
+
+import java.util.*;
 import java.util.concurrent.ConcurrentLinkedQueue;
 import javax.annotation.Nullable;
 import net.minecraft.block.Block;
@@ -35,9 +33,17 @@
 import net.minecraft.world.chunk.storage.ExtendedBlockStorage;
 import net.minecraft.world.gen.ChunkGeneratorDebug;
 import net.minecraft.world.gen.IChunkGenerator;
+
+import redstone.multimeter.helper.WorldHelper;
+
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import carpet.CarpetSettings;
+import carpet.carpetclient.CarpetClientChunkLogger;
+import carpet.helpers.LightingHooks;
+import narcolepticfrog.rsmm.events.StateChangeEventDispatcher;
+
 public class Chunk
 {
     private static final Logger field_150817_t = LogManager.getLogger();
@@ -66,13 +72,17 @@
     private final ConcurrentLinkedQueue<BlockPos> field_177447_w;
     public boolean field_189550_d;
 
+    // Phipro newlight CARPET-PHIPRO
+    public short[] neighborLightChecks = null;
+    public short pendingNeighborLightInits;
+
     public Chunk(World p_i1995_1_, int p_i1995_2_, int p_i1995_3_)
     {
         this.field_76652_q = new ExtendedBlockStorage[16];
         this.field_76651_r = new byte[256];
         this.field_76638_b = new int[256];
         this.field_76639_c = new boolean[256];
-        this.field_150816_i = Maps.<BlockPos, TileEntity>newHashMap();
+        this.field_150816_i = CarpetSettings.reloadUpdateOrderFix ? Maps.newLinkedHashMap() : Maps.newHashMap(); // CM: reload update order fix
         this.field_76649_t = 4096;
         this.field_177447_w = Queues.<BlockPos>newConcurrentLinkedQueue();
         this.field_76645_j = (ClassInheritanceMultiMap[])(new ClassInheritanceMultiMap[16]);
@@ -188,38 +198,43 @@
 
                 if (this.field_76637_e.field_73011_w.func_191066_m())
                 {
-                    int k1 = 15;
-                    int i1 = i + 16 - 1;
+                	// NewLight PHIPRO-CARPET
+            		if (CarpetSettings.newLight){
+            			LightingHooks.fillSkylightColumn(this, j, k);
+            		}else{
+	                    int k1 = 15;
+	                    int i1 = i + 16 - 1;
 
-                    while (true)
-                    {
-                        int j1 = this.func_150808_b(j, i1, k);
+	                    while (true)
+	                    {
+	                        int j1 = this.func_150808_b(j, i1, k);
 
-                        if (j1 == 0 && k1 != 15)
-                        {
-                            j1 = 1;
-                        }
+	                        if (j1 == 0 && k1 != 15)
+	                        {
+	                            j1 = 1;
+	                        }
 
-                        k1 -= j1;
+	                        k1 -= j1;
 
-                        if (k1 > 0)
-                        {
-                            ExtendedBlockStorage extendedblockstorage = this.field_76652_q[i1 >> 4];
+	                        if (k1 > 0)
+	                        {
+	                            ExtendedBlockStorage extendedblockstorage = this.field_76652_q[i1 >> 4];
 
-                            if (extendedblockstorage != field_186036_a)
-                            {
-                                extendedblockstorage.func_76657_c(j, i1 & 15, k, k1);
-                                this.field_76637_e.func_175679_n(new BlockPos((this.field_76635_g << 4) + j, i1, (this.field_76647_h << 4) + k));
-                            }
-                        }
+	                            if (extendedblockstorage != field_186036_a)
+	                            {
+	                                extendedblockstorage.func_76657_c(j, i1 & 15, k, k1);
+	                                this.field_76637_e.func_175679_n(new BlockPos((this.field_76635_g << 4) + j, i1, (this.field_76647_h << 4) + k));
+	                            }
+	                        }
 
-                        --i1;
+	                        --i1;
 
-                        if (i1 <= 0 || k1 <= 0)
-                        {
-                            break;
-                        }
-                    }
+	                        if (i1 <= 0 || k1 <= 0)
+	                        {
+	                            break;
+	                        }
+	                    }
+            		}
                 }
             }
         }
@@ -307,7 +322,13 @@
 
     private void func_76615_h(int p_76615_1_, int p_76615_2_, int p_76615_3_)
     {
-        int i = this.field_76634_f[p_76615_3_ << 4 | p_76615_1_] & 255;
+    	// NewLight PHIPRO-CARPET
+    	int i;
+		if (CarpetSettings.newLight){
+			i = this.field_76634_f[p_76615_3_ << 4 | p_76615_1_];
+		}else{
+			i = this.field_76634_f[p_76615_3_ << 4 | p_76615_1_] & 255;
+		}
         int j = i;
 
         if (p_76615_2_ > i)
@@ -322,66 +343,72 @@
 
         if (j != i)
         {
-            this.field_76637_e.func_72975_g(p_76615_1_ + this.field_76635_g * 16, p_76615_3_ + this.field_76647_h * 16, j, i);
+        	// NewLight PHIPRO-CARPET
+        	if (!CarpetSettings.newLight) this.field_76637_e.func_72975_g(p_76615_1_ + this.field_76635_g * 16, p_76615_3_ + this.field_76647_h * 16, j, i); //Forge: Useless, since heightMap is not updated yet (See #3871)
             this.field_76634_f[p_76615_3_ << 4 | p_76615_1_] = j;
             int k = this.field_76635_g * 16 + p_76615_1_;
             int l = this.field_76647_h * 16 + p_76615_3_;
 
             if (this.field_76637_e.field_73011_w.func_191066_m())
             {
-                if (j < i)
-                {
-                    for (int j1 = j; j1 < i; ++j1)
-                    {
-                        ExtendedBlockStorage extendedblockstorage2 = this.field_76652_q[j1 >> 4];
+            	// NewLight PHIPRO-CARPET
+            	if (CarpetSettings.newLight){
+            		LightingHooks.relightSkylightColumn(this.field_76637_e, this, p_76615_1_, p_76615_3_, i, j); //Forge: Optimized version of World.markBlocksDirtyVertical; heightMap is now updated (See #3871)
+            	} else{ // Don't mess up the light cache; World.checkLight already does all necessary steps (See #3871)
+	                if (j < i)
+	                {
+	                    for (int j1 = j; j1 < i; ++j1)
+	                    {
+	                        ExtendedBlockStorage extendedblockstorage2 = this.field_76652_q[j1 >> 4];
 
-                        if (extendedblockstorage2 != field_186036_a)
-                        {
-                            extendedblockstorage2.func_76657_c(p_76615_1_, j1 & 15, p_76615_3_, 15);
-                            this.field_76637_e.func_175679_n(new BlockPos((this.field_76635_g << 4) + p_76615_1_, j1, (this.field_76647_h << 4) + p_76615_3_));
-                        }
-                    }
-                }
-                else
-                {
-                    for (int i1 = i; i1 < j; ++i1)
-                    {
-                        ExtendedBlockStorage extendedblockstorage = this.field_76652_q[i1 >> 4];
+	                        if (extendedblockstorage2 != field_186036_a)
+	                        {
+	                            extendedblockstorage2.func_76657_c(p_76615_1_, j1 & 15, p_76615_3_, 15);
+	                            this.field_76637_e.func_175679_n(new BlockPos((this.field_76635_g << 4) + p_76615_1_, j1, (this.field_76647_h << 4) + p_76615_3_));
+	                        }
+	                    }
+	                }
+	                else
+	                {
+	                    for (int i1 = i; i1 < j; ++i1)
+	                    {
+	                        ExtendedBlockStorage extendedblockstorage = this.field_76652_q[i1 >> 4];
 
-                        if (extendedblockstorage != field_186036_a)
-                        {
-                            extendedblockstorage.func_76657_c(p_76615_1_, i1 & 15, p_76615_3_, 0);
-                            this.field_76637_e.func_175679_n(new BlockPos((this.field_76635_g << 4) + p_76615_1_, i1, (this.field_76647_h << 4) + p_76615_3_));
-                        }
-                    }
-                }
+	                        if (extendedblockstorage != field_186036_a)
+	                        {
+	                            extendedblockstorage.func_76657_c(p_76615_1_, i1 & 15, p_76615_3_, 0);
+	                            this.field_76637_e.func_175679_n(new BlockPos((this.field_76635_g << 4) + p_76615_1_, i1, (this.field_76647_h << 4) + p_76615_3_));
+	                        }
+	                    }
+	                }
 
-                int k1 = 15;
+	                int k1 = 15;
 
-                while (j > 0 && k1 > 0)
-                {
-                    --j;
-                    int i2 = this.func_150808_b(p_76615_1_, j, p_76615_3_);
+	                while (j > 0 && k1 > 0)
+	                {
+	                    --j;
+	                    int i2 = this.func_150808_b(p_76615_1_, j, p_76615_3_);
 
-                    if (i2 == 0)
-                    {
-                        i2 = 1;
-                    }
+	                    if (i2 == 0)
+	                    {
+	                        i2 = 1;
+	                    }
 
-                    k1 -= i2;
+	                    k1 -= i2;
 
-                    if (k1 < 0)
-                    {
-                        k1 = 0;
-                    }
+	                    if (k1 < 0)
+	                    {
+	                        k1 = 0;
+	                    }
 
-                    ExtendedBlockStorage extendedblockstorage1 = this.field_76652_q[j >> 4];
+	                    ExtendedBlockStorage extendedblockstorage1 = this.field_76652_q[j >> 4];
 
-                    if (extendedblockstorage1 != field_186036_a)
-                    {
-                        extendedblockstorage1.func_76657_c(p_76615_1_, j & 15, p_76615_3_, k1);
-                    }
-                }
+	                    if (extendedblockstorage1 != field_186036_a)
+	                    {
+	                        extendedblockstorage1.func_76657_c(p_76615_1_, j & 15, p_76615_3_, k1);
+	                    }
+	                }
+            	}
             }
 
             int l1 = this.field_76634_f[p_76615_3_ << 4 | p_76615_1_];
@@ -399,6 +426,12 @@
                 this.field_82912_p = l1;
             }
 
+            // NewLight PHIPRO-CARPET
+        	if (CarpetSettings.newLight){
+        		this.field_76643_l = true;
+        		return; //Forge: Following checks are not needed if the light cache is not messed up (See #3871)
+        	}
+
             if (this.field_76637_e.field_73011_w.func_191066_m())
             {
                 for (EnumFacing enumfacing : EnumFacing.Plane.HORIZONTAL)
@@ -478,12 +511,19 @@
         }
     }
 
+    /*carpet mod default behaviour*/
     @Nullable
     public IBlockState func_177436_a(BlockPos p_177436_1_, IBlockState p_177436_2_)
     {
-        int i = p_177436_1_.func_177958_n() & 15;
-        int j = p_177436_1_.func_177956_o();
-        int k = p_177436_1_.func_177952_p() & 15;
+        return setBlockState_carpet(p_177436_1_, p_177436_2_, false);
+    }
+
+    @Nullable
+    public IBlockState setBlockState_carpet(BlockPos pos, IBlockState state, boolean skip_updates) //CM added skip_updates
+    {
+        int i = pos.func_177958_n() & 15;
+        int j = pos.func_177956_o();
+        int k = pos.func_177952_p() & 15;
         int l = k << 4 | i;
 
         if (j >= this.field_76638_b[l] - 1)
@@ -492,15 +532,15 @@
         }
 
         int i1 = this.field_76634_f[l];
-        IBlockState iblockstate = this.func_177435_g(p_177436_1_);
+        IBlockState iblockstate = this.func_177435_g(pos);
 
-        if (iblockstate == p_177436_2_)
+        if (iblockstate == state)
         {
             return null;
         }
         else
         {
-            Block block = p_177436_2_.func_177230_c();
+            Block block = state.func_177230_c();
             Block block1 = iblockstate.func_177230_c();
             ExtendedBlockStorage extendedblockstorage = this.field_76652_q[j >> 4];
             boolean flag = false;
@@ -515,19 +555,29 @@
                 extendedblockstorage = new ExtendedBlockStorage(j >> 4 << 4, this.field_76637_e.field_73011_w.func_191066_m());
                 this.field_76652_q[j >> 4] = extendedblockstorage;
                 flag = j >= i1;
+                // NewLight PHIPRO-CARPET
+            	if (CarpetSettings.newLight){
+            		LightingHooks.initSkylightForSection(this.field_76637_e, this, extendedblockstorage); //Forge: Always initialize sections properly (See #3870 and #3879)
+            	}
             }
 
-            extendedblockstorage.func_177484_a(i, j & 15, k, p_177436_2_);
+            extendedblockstorage.func_177484_a(i, j & 15, k, state);
 
+            // RSMM start
+            if (CarpetSettings.redstoneMultimeter && !field_76637_e.field_72995_K) {
+                WorldHelper.getMultimeter().onBlockChange(field_76637_e, pos, iblockstate, state);
+            }
+            // RSMM end
+
             if (block1 != block)
             {
-                if (!this.field_76637_e.field_72995_K)
+                if (!skip_updates && !this.field_76637_e.field_72995_K)
                 {
-                    block1.func_180663_b(this.field_76637_e, p_177436_1_, iblockstate);
+                    block1.func_180663_b(this.field_76637_e, pos, iblockstate);
                 }
                 else if (block1 instanceof ITileEntityProvider)
                 {
-                    this.field_76637_e.func_175713_t(p_177436_1_);
+                    this.field_76637_e.func_175713_t(pos);
                 }
             }
 
@@ -537,13 +587,13 @@
             }
             else
             {
-                if (flag)
+                if (!CarpetSettings.newLight && flag) //Forge: Don't call generateSkylightMap (as it produces the wrong result; sections are initialized above). Never bypass relightBlock (See #3870)
                 {
                     this.func_76603_b();
                 }
                 else
                 {
-                    int j1 = p_177436_2_.func_185891_c();
+                    int j1 = state.func_185891_c();
                     int k1 = iblockstate.func_185891_c();
 
                     if (j1 > 0)
@@ -558,15 +608,17 @@
                         this.func_76615_h(i, j, k);
                     }
 
-                    if (j1 != k1 && (j1 < k1 || this.func_177413_a(EnumSkyBlock.SKY, p_177436_1_) > 0 || this.func_177413_a(EnumSkyBlock.BLOCK, p_177436_1_) > 0))
-                    {
-                        this.func_76595_e(i, k);
-                    }
+                    if (!CarpetSettings.newLight) { //Forge: Error correction is unnecessary as these are fixed (See #3871)
+	                    if (j1 != k1 && (j1 < k1 || this.func_177413_a(EnumSkyBlock.SKY, pos) > 0 || this.func_177413_a(EnumSkyBlock.BLOCK, pos) > 0))
+	                    {
+	                        this.func_76595_e(i, k);
+	                    }
+	                }
                 }
 
                 if (block1 instanceof ITileEntityProvider)
                 {
-                    TileEntity tileentity = this.func_177424_a(p_177436_1_, Chunk.EnumCreateEntityType.CHECK);
+                    TileEntity tileentity = this.func_177424_a(pos, Chunk.EnumCreateEntityType.CHECK);
 
                     if (tileentity != null)
                     {
@@ -574,19 +626,30 @@
                     }
                 }
 
-                if (!this.field_76637_e.field_72995_K && block1 != block)
+                //if (!this.worldObj.isRemote && block1 != block) //CM replaced
+                if (!skip_updates && !this.field_76637_e.field_72995_K && block1 != block)
                 {
-                    block.func_176213_c(this.field_76637_e, p_177436_1_, p_177436_2_);
+                    block.func_176213_c(this.field_76637_e, pos, state);
                 }
 
                 if (block instanceof ITileEntityProvider)
                 {
-                    TileEntity tileentity1 = this.func_177424_a(p_177436_1_, Chunk.EnumCreateEntityType.CHECK);
+                    TileEntity tileentity1;
 
+                    // Movable Tile entity fix CARPET-2No2Name
+                    if(CarpetSettings.movableTileEntities || CarpetSettings.autocrafter)
+                    {  //this.getTileEntity(...) doesn't check pending TileEntities
+                        tileentity1 = this.field_76637_e.func_175625_s(pos);
+                    }
+                    else
+                    { // vanilla
+                        tileentity1 = this.func_177424_a(pos, Chunk.EnumCreateEntityType.CHECK);
+                    }
+
                     if (tileentity1 == null)
                     {
-                        tileentity1 = ((ITileEntityProvider)block).func_149915_a(this.field_76637_e, block.func_176201_c(p_177436_2_));
-                        this.field_76637_e.func_175690_a(p_177436_1_, tileentity1);
+                        tileentity1 = ((ITileEntityProvider)block).func_149915_a(this.field_76637_e, block.func_176201_c(state));
+                        this.field_76637_e.func_175690_a(pos, tileentity1);
                     }
 
                     if (tileentity1 != null)
@@ -596,6 +659,9 @@
                 }
 
                 this.field_76643_l = true;
+                // ----- RSMM Start ----- //
+                if (CarpetSettings.redstoneMultimeterLegacy) { StateChangeEventDispatcher.dispatchEvent(this.func_177412_p(), pos); }
+                // ----- RSMM End ----- //
                 return iblockstate;
             }
         }
@@ -603,6 +669,7 @@
 
     public int func_177413_a(EnumSkyBlock p_177413_1_, BlockPos p_177413_2_)
     {
+    	if (CarpetSettings.newLight) this.field_76637_e.lightingEngine.procLightUpdates(p_177413_1_);
         int i = p_177413_2_.func_177958_n() & 15;
         int j = p_177413_2_.func_177956_o();
         int k = p_177413_2_.func_177952_p() & 15;
@@ -633,7 +700,12 @@
         {
             extendedblockstorage = new ExtendedBlockStorage(j >> 4 << 4, this.field_76637_e.field_73011_w.func_191066_m());
             this.field_76652_q[j >> 4] = extendedblockstorage;
-            this.func_76603_b();
+            // NewLight PHIPRO-CARPET
+    		if (CarpetSettings.newLight){
+            	LightingHooks.initSkylightForSection(this.field_76637_e, this, extendedblockstorage); //Forge: generateSkylightMap produces the wrong result (See #3870)
+            }else{
+            	this.func_76603_b();
+            }
         }
 
         this.field_76643_l = true;
@@ -653,6 +725,7 @@
 
     public int func_177443_a(BlockPos p_177443_1_, int p_177443_2_)
     {
+    	if (CarpetSettings.newLight) this.field_76637_e.lightingEngine.procLightUpdates();
         int i = p_177443_1_.func_177958_n() & 15;
         int j = p_177443_1_.func_177956_o();
         int k = p_177443_1_.func_177952_p() & 15;
@@ -819,6 +892,10 @@
         {
             this.field_76637_e.func_175650_b(classinheritancemultimap);
         }
+        // NewLight PHIPRO-CARPET
+     	if (CarpetSettings.newLight){
+     		LightingHooks.onLoad(this.field_76637_e, this);
+     	}
     }
 
     public void func_76623_d()
@@ -964,13 +1041,40 @@
         {
             if (p_186034_1_.func_185933_a(this, this.field_76635_g, this.field_76647_h))
             {
+        		// ChunkLogger 0x-CARPET
+                if(CarpetClientChunkLogger.logger.enabled) {
+                    CarpetClientChunkLogger.setReason("Generating structure");
+                	CarpetClientChunkLogger.logger.log(this.field_76637_e,this.field_76635_g,this.field_76647_h,CarpetClientChunkLogger.Event.GENERATING_STRUCTURES);
+                    carpet.carpetclient.CarpetClientChunkLogger.resetReason();
+                }
+        		
                 this.func_76630_e();
             }
         }
         else
         {
-            this.func_150809_p();
+        	// NewLight PHIPRO-CARPET
+    		if (CarpetSettings.newLight){
+        		this.field_76646_k = true;
+        	}else{
+        		this.func_150809_p();
+        	}
+    		// ChunkLogger 0x-CARPET
+            if(CarpetClientChunkLogger.logger.enabled) {
+                CarpetClientChunkLogger.setReason("Populating chunk");
+            	CarpetClientChunkLogger.logger.log(this.field_76637_e,this.field_76635_g,this.field_76647_h,CarpetClientChunkLogger.Event.POPULATING);
+                carpet.carpetclient.CarpetClientChunkLogger.resetReason();
+            }
+
             p_186034_1_.func_185931_b(this.field_76635_g, this.field_76647_h);
+            // Skyblock in carpet 12
+            if(CarpetSettings.skyblock) {
+                for(int i = 0; i < 4; i++) {
+                    if(field_76637_e.func_190526_b(field_76635_g + i % 2, field_76647_h + i / 2)) {
+                        field_76637_e.func_72964_e(field_76635_g + i % 2, field_76647_h + i / 2).removeAllBlocks();
+                    }
+                }
+            }
             this.func_76630_e();
         }
     }
@@ -1018,10 +1122,13 @@
 
         this.field_150815_m = true;
 
-        if (!this.field_150814_l && this.field_76646_k)
-        {
-            this.func_150809_p();
-        }
+        // NewLight PHIPRO-CARPET
+		if (!CarpetSettings.newLight){
+	        if (!this.field_150814_l && this.field_76646_k)
+	        {
+	            this.func_150809_p();
+	        }
+		}
 
         while (!this.field_177447_w.isEmpty())
         {
@@ -1041,6 +1148,11 @@
         return this.field_150815_m && this.field_76646_k && this.field_150814_l;
     }
 
+    public void setUnpopulated()
+    {
+        this.field_76646_k = false;
+    }
+
     public boolean func_186035_j()
     {
         return this.field_150815_m;
@@ -1389,4 +1501,67 @@
         QUEUED,
         CHECK;
     }
+
+    // NewLight PHIPRO-CARPET
+    public int getCachedLightFor(EnumSkyBlock type, BlockPos pos)
+    {
+        int i = pos.func_177958_n() & 15;
+        int j = pos.func_177956_o();
+        int k = pos.func_177952_p() & 15;
+        ExtendedBlockStorage extendedblockstorage = this.field_76652_q[j >> 4];
+
+        if (extendedblockstorage == field_186036_a)
+        {
+            return this.func_177444_d(pos) ? type.field_77198_c : 0;
+        }
+        else if (type == EnumSkyBlock.SKY)
+        {
+            return !this.field_76637_e.field_73011_w.func_191066_m() ? 0 : extendedblockstorage.func_76670_c(i, j & 15, k);
+        }
+        else
+        {
+            return type == EnumSkyBlock.BLOCK ? extendedblockstorage.func_76674_d(i, j & 15, k) : type.field_77198_c;
+        }
+    }
+
+    // Carpet skyblock
+    public void removeAllBlocks(){
+        IBlockState air = Blocks.field_150350_a.func_176223_P();
+        for (int j = 0; j < 16; ++j)
+        {
+            for (int k = 0; k < 16; ++k)
+            {
+                for (int l = 0; l < 256; ++l)
+                {
+                    int i1 = l >> 4;
+                    try {
+                        if(this.field_76652_q[i1] != null && this.field_76652_q[i1].func_177485_a(j, l & 15, k).func_177230_c() != Blocks.field_150378_br){
+                            this.field_76652_q[i1].func_177484_a(j, l & 15, k, air);
+                            if(this.field_76652_q[i1].func_76671_l() != null) this.field_76652_q[i1].func_76657_c(j, l & 15, k, 15);
+                        }
+                    }catch(Exception e){
+                    }
+                }
+            }
+        }
+        if(field_150816_i != null){
+            field_150816_i.clear();
+        }
+        if(field_76645_j != null){
+            LinkedList<Entity> list = new LinkedList<>();
+            for(int iter = 0; iter < field_76645_j.length; iter++){
+                Iterator<Entity> iterator = field_76645_j[iter].iterator();
+                while (iterator.hasNext()){
+                    list.add(iterator.next());
+                }
+            }
+            for(Entity e : list){
+                e.func_70106_y();
+            }
+        }
+        field_82912_p = 0;
+        if(field_76637_e.field_73011_w.func_191066_m()){
+            Arrays.fill(field_76634_f, 15);
+        }
+    }
 }
