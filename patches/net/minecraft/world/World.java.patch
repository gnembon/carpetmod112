--- ../src-base/minecraft/net/minecraft/world/World.java
+++ ../src-work/minecraft/net/minecraft/world/World.java
@@ -4,13 +4,11 @@
 import com.google.common.base.MoreObjects;
 import com.google.common.base.Predicate;
 import com.google.common.collect.Lists;
-import java.util.Calendar;
-import java.util.Collection;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Random;
-import java.util.UUID;
-import java.util.function.Supplier;
+
+import java.lang.reflect.Field;
+import java.util.*;
+import java.util.concurrent.atomic.AtomicLong;
+
 import javax.annotation.Nullable;
 import net.minecraft.advancements.AdvancementManager;
 import net.minecraft.advancements.FunctionManager;
@@ -60,10 +58,21 @@
 import net.minecraft.world.storage.WorldSavedData;
 import net.minecraft.world.storage.loot.LootTableManager;
 
+import carpet.utils.CarpetProfiler;
+import carpet.utils.Messenger;
+import carpet.CarpetSettings;
+import carpet.carpetclient.CarpetClientChunkLogger;
+import narcolepticfrog.rsmm.events.StateChangeEventDispatcher;
+import net.minecraft.util.text.ITextComponent;
+import carpet.logging.LoggerRegistry;
+import carpet.utils.TickingArea;
+import carpet.helpers.*;
+import it.unimi.dsi.fastutil.longs.LongOpenHashSet;
+
 public abstract class World implements IBlockAccess
 {
     private int field_181546_a = 63;
-    protected boolean field_72999_e;
+    public boolean field_72999_e;
     public final List<Entity> field_72996_f = Lists.<Entity>newArrayList();
     protected final List<Entity> field_72997_g = Lists.<Entity>newArrayList();
     public final List<TileEntity> field_147482_g = Lists.<TileEntity>newArrayList();
@@ -75,7 +84,7 @@
     protected final IntHashMap<Entity> field_175729_l = new IntHashMap<Entity>();
     private final long field_73001_c = 16777215L;
     private int field_73008_k;
-    protected int field_73005_l = (new Random()).nextInt();
+    public int field_73005_l = (new Random()).nextInt();
     protected final int field_73006_m = 1013904223;
     protected float field_73003_n;
     protected float field_73004_o;
@@ -105,6 +114,13 @@
     private final WorldBorder field_175728_M;
     int[] field_72994_J;
 
+    // NewLight PHIPRO-CARPET
+    public final LightingEngine lightingEngine;
+
+    // Carpet TickingAreas
+    public final List<TickingArea> tickingAreas = Lists.newArrayList();
+    public final LongOpenHashSet tickingChunks = new LongOpenHashSet();
+
     protected World(ISaveHandler p_i45749_1_, WorldInfo p_i45749_2_, WorldProvider p_i45749_3_, Profiler p_i45749_4_, boolean p_i45749_5_)
     {
         this.field_73021_x = Lists.newArrayList(this.field_184152_t);
@@ -119,6 +135,7 @@
         this.field_73011_w = p_i45749_3_;
         this.field_72995_K = p_i45749_5_;
         this.field_175728_M = p_i45749_3_.func_177501_r();
+        this.lightingEngine = new LightingEngine(this);
     }
 
     public World func_175643_b()
@@ -269,7 +286,7 @@
         }
     }
 
-    protected abstract boolean func_175680_a(int p_175680_1_, int p_175680_2_, boolean p_175680_3_);
+    public abstract boolean func_175680_a(int p_175680_1_, int p_175680_2_, boolean p_175680_3_);
 
     public Chunk func_175726_f(BlockPos p_175726_1_)
     {
@@ -286,6 +303,16 @@
         return this.func_175680_a(p_190526_1_, p_190526_2_, false) ? true : this.field_73020_y.func_191062_e(p_190526_1_, p_190526_2_);
     }
 
+    //CM chunk load reason
+    public boolean setBlockState(BlockPos pos, IBlockState newState, int flags, String reason)
+    {
+        String prevReason = CarpetClientChunkLogger.reason;
+        CarpetClientChunkLogger.reason = reason;
+        boolean successful = func_180501_a(pos, newState, flags);
+        CarpetClientChunkLogger.reason = prevReason;
+        return successful;
+    }
+
     public boolean func_180501_a(BlockPos p_180501_1_, IBlockState p_180501_2_, int p_180501_3_)
     {
         if (this.func_189509_E(p_180501_1_))
@@ -300,7 +327,8 @@
         {
             Chunk chunk = this.func_175726_f(p_180501_1_);
             Block block = p_180501_2_.func_177230_c();
-            IBlockState iblockstate = chunk.func_177436_a(p_180501_1_, p_180501_2_);
+            //CM modified for fillUpdates = false
+            IBlockState iblockstate = chunk.setBlockState_carpet(p_180501_1_, p_180501_2_, ((p_180501_3_ & 128) != 0) ?true:false ); // carpet added flag
 
             if (iblockstate == null)
             {
@@ -329,7 +357,8 @@
                         this.func_175666_e(p_180501_1_, block);
                     }
                 }
-                else if (!this.field_72995_K && (p_180501_3_ & 16) == 0)
+                //CM else if (!this.isRemote && (flags & 16) == 0) replaces
+                else if (!this.field_72995_K && ((p_180501_3_ & 16) == 0) && ((p_180501_3_ & 128) == 0))
                 {
                     this.func_190522_c(p_180501_1_, block);
                 }
@@ -430,8 +459,36 @@
         this.func_190529_b(p_190522_1_.func_177968_d(), p_190522_2_, p_190522_1_);
     }
 
+    /* carpet mod */
+    public void updateObservingBlocksAt_other(BlockPos pos, Block blockType)
+    {
+        this.func_190529_b(pos.func_177976_e(), blockType, pos);
+        this.func_190529_b(pos.func_177974_f(), blockType, pos);
+        this.func_190529_b(pos.func_177977_b(), blockType, pos);
+        //this.observedNeighborChanged(pos.up(), blockType, pos);
+        this.func_190529_b(pos.func_177978_c(), blockType, pos);
+        this.func_190529_b(pos.func_177968_d(), blockType, pos);
+    }
+
     public void func_175685_c(BlockPos p_175685_1_, Block p_175685_2_, boolean p_175685_3_)
     {
+        /* carpet mod */
+        if (CarpetSettings.extendedConnectivity)
+        {
+            BlockPos posd = p_175685_1_.func_177977_b();
+
+            this.func_190524_a(posd.func_177976_e(), p_175685_2_, p_175685_1_);
+            this.func_190524_a(posd.func_177974_f(), p_175685_2_, p_175685_1_);
+            this.func_190524_a(posd.func_177977_b(), p_175685_2_, p_175685_1_);
+            //this.neighborChanged(pos.up(), blockType);
+            this.func_190524_a(posd.func_177978_c(), p_175685_2_, p_175685_1_);
+            this.func_190524_a(posd.func_177968_d(), p_175685_2_, p_175685_1_);
+            if (p_175685_3_)
+            {
+                this.updateObservingBlocksAt_other(posd, p_175685_2_);
+            }
+        }
+        /* end */
         this.func_190524_a(p_175685_1_.func_177976_e(), p_175685_2_, p_175685_1_);
         this.func_190524_a(p_175685_1_.func_177974_f(), p_175685_2_, p_175685_1_);
         this.func_190524_a(p_175685_1_.func_177977_b(), p_175685_2_, p_175685_1_);
@@ -447,6 +504,44 @@
 
     public void func_175695_a(BlockPos p_175695_1_, Block p_175695_2_, EnumFacing p_175695_3_)
     {
+        /* carpet mod */
+        if (CarpetSettings.extendedConnectivity)
+        {
+            BlockPos posd = p_175695_1_.func_177977_b();
+
+            if (p_175695_3_ != EnumFacing.WEST)
+            {
+                this.func_190524_a(posd.func_177976_e(), p_175695_2_, posd);
+            }
+
+            if (p_175695_3_ != EnumFacing.EAST)
+            {
+                this.func_190524_a(posd.func_177974_f(), p_175695_2_, posd);
+            }
+
+            if (p_175695_3_ != EnumFacing.DOWN)
+            {
+                this.func_190524_a(posd.func_177977_b(), p_175695_2_, posd);
+            }
+
+            //if (skipSide != EnumFacing.UP)
+            //{
+            //      this.neighborChanged(pos.up(), blockType, posd);
+            //}
+
+            if (p_175695_3_ != EnumFacing.NORTH)
+            {
+                this.func_190524_a(posd.func_177978_c(), p_175695_2_, posd);
+            }
+
+            if (p_175695_3_ != EnumFacing.SOUTH)
+            {
+                this.func_190524_a(posd.func_177968_d(), p_175695_2_, posd);
+            }
+
+        }
+        /* carpet mod */
+
         if (p_175695_3_ != EnumFacing.WEST)
         {
             this.func_190524_a(p_175695_1_.func_177976_e(), p_175695_2_, p_175695_1_);
@@ -480,6 +575,11 @@
 
     public void func_190524_a(BlockPos p_190524_1_, final Block p_190524_2_, BlockPos p_190524_3_)
     {
+        if(CarpetSettings.updateSuppressionCrashFix){
+            neighborChangedUpdateSuppressionFixed(p_190524_1_, p_190524_2_, p_190524_3_);
+            return;
+        }
+
         if (!this.field_72995_K)
         {
             IBlockState iblockstate = this.func_180495_p(p_190524_1_);
@@ -509,11 +609,21 @@
                 CrashReportCategory.func_175750_a(crashreportcategory, p_190524_1_, iblockstate);
                 throw new ReportedException(crashreport);
             }
+            // ----- RSMM Start ----- //
+            if (CarpetSettings.redstoneMultimeter) {
+                StateChangeEventDispatcher.dispatchEvent(this, p_190524_1_);
+            }
+            // ----- RSMM End ----- //
         }
     }
 
     public void func_190529_b(BlockPos p_190529_1_, final Block p_190529_2_, BlockPos p_190529_3_)
     {
+        if(CarpetSettings.updateSuppressionCrashFix){
+            observedNeighborChangedUpdateSuppressionFixed(p_190529_1_, p_190529_2_, p_190529_3_);
+            return;
+        }
+
         if (!this.field_72995_K)
         {
             IBlockState iblockstate = this.func_180495_p(p_190529_1_);
@@ -546,6 +656,11 @@
                     throw new ReportedException(crashreport);
                 }
             }
+            // ----- RSMM Start ----- //
+            if (CarpetSettings.redstoneMultimeter) {
+                StateChangeEventDispatcher.dispatchEvent(this, p_190529_1_);
+            }
+            // ----- RSMM End ----- //
         }
     }
 
@@ -1076,6 +1191,18 @@
 
     public void func_72900_e(Entity p_72900_1_)
     {
+        if(LoggerRegistry.__invisDebug && p_72900_1_ instanceof EntityPlayerMP){ // Added debugger for the complex bug turning players invisible. CARPET-XCOM
+            StackTraceElement[] trace = new Throwable().getStackTrace();
+            String s = "";
+            for(StackTraceElement e : trace){
+                s += e.toString();
+                s += "\n";
+            }
+            final String ss = s;
+            LoggerRegistry.getLogger("invisDebug").log(()-> new ITextComponent[]{
+                    Messenger.s(null, "r1: " + p_72900_1_ + " " + ss)
+            });
+        }
         if (p_72900_1_.func_184207_aI())
         {
             p_72900_1_.func_184226_ay();
@@ -1098,6 +1225,18 @@
 
     public void func_72973_f(Entity p_72973_1_)
     {
+        if(LoggerRegistry.__invisDebug && p_72973_1_ instanceof EntityPlayerMP){ // Added debugger for the complex bug turning players invisible. CARPET-XCOM
+            StackTraceElement[] trace = new Throwable().getStackTrace();
+            String s = "";
+            for(StackTraceElement e : trace){
+                s += e.toString();
+                s += "\n";
+            }
+            final String ss = s;
+            LoggerRegistry.getLogger("invisDebug").log(()-> new ITextComponent[]{
+                    Messenger.s(null, "r1: " + p_72973_1_ + " " + ss)
+            });
+        }
         p_72973_1_.func_184174_b(false);
         p_72973_1_.func_70106_y();
 
@@ -1126,6 +1265,9 @@
 
     private boolean func_191504_a(@Nullable Entity p_191504_1_, AxisAlignedBB p_191504_2_, boolean p_191504_3_, @Nullable List<AxisAlignedBB> p_191504_4_)
     {
+        if (CarpetSettings.blockCollisionsOptimization) { // CARPET-MASA
+            return CollisionBoxesOptimizations.optimizedGetCollisionBoxes(this, p_191504_1_, p_191504_2_, p_191504_3_, p_191504_4_);
+        }
         int i = MathHelper.func_76128_c(p_191504_2_.field_72340_a) - 1;
         int j = MathHelper.func_76143_f(p_191504_2_.field_72336_d) + 1;
         int k = MathHelper.func_76128_c(p_191504_2_.field_72338_b) - 1;
@@ -1339,6 +1481,7 @@
         this.field_72984_F.func_76320_a("entities");
         this.field_72984_F.func_76320_a("global");
 
+        LagSpikeHelper.processLagSpikes(this, LagSpikeHelper.TickPhase.ENTITY, LagSpikeHelper.EntitySubPhase.PRE);
         for (int i = 0; i < this.field_73007_j.size(); ++i)
         {
             Entity entity = this.field_73007_j.get(i);
@@ -1370,6 +1513,9 @@
                 this.field_73007_j.remove(i--);
             }
         }
+        LagSpikeHelper.processLagSpikes(this, LagSpikeHelper.TickPhase.ENTITY, LagSpikeHelper.EntitySubPhase.POST_WEATHER);
+        String world_name = this.field_73011_w.func_186058_p().func_186065_b();
+        CarpetProfiler.start_section(world_name, "entities");
 
         this.field_72984_F.func_76318_c("remove");
         this.field_72996_f.removeAll(this.field_72997_g);
@@ -1393,11 +1539,13 @@
 
         this.field_72997_g.clear();
         this.func_184147_l();
+        LagSpikeHelper.processLagSpikes(this, LagSpikeHelper.TickPhase.ENTITY, LagSpikeHelper.EntitySubPhase.POST_PLAYERS);
         this.field_72984_F.func_76318_c("regular");
 
         for (int i1 = 0; i1 < this.field_72996_f.size(); ++i1)
         {
             Entity entity2 = this.field_72996_f.get(i1);
+            CarpetProfiler.start_entity_section(world_name, entity2);
             Entity entity3 = entity2.func_184187_bx();
 
             if (entity3 != null)
@@ -1416,7 +1564,10 @@
             {
                 try
                 {
-                    this.func_72870_g(entity2);
+                    if (TickSpeed.process_entities)
+                    {
+                        this.func_72870_g(entity2);
+                    }
                 }
                 catch (Throwable throwable1)
                 {
@@ -1437,31 +1588,50 @@
 
                 if (entity2.field_70175_ag && this.func_175680_a(l1, i2, true))
                 {
+                    if(carpet.carpetclient.CarpetClientChunkLogger.logger.enabled)
+                        carpet.carpetclient.CarpetClientChunkLogger.setReason("Removing entity from chunk: " + entity2.func_70005_c_());
                     this.func_72964_e(l1, i2).func_76622_b(entity2);
+                    carpet.carpetclient.CarpetClientChunkLogger.resetReason();
                 }
 
                 this.field_72996_f.remove(i1--);
                 this.func_72847_b(entity2);
             }
+            CarpetProfiler.end_current_entity_section();
 
             this.field_72984_F.func_76319_b();
         }
+        LagSpikeHelper.processLagSpikes(this, LagSpikeHelper.TickPhase.ENTITY, LagSpikeHelper.EntitySubPhase.POST_NORMAL);
+        CarpetProfiler.end_current_section();
+        CarpetProfiler.start_section(world_name, "tileentities");
 
         this.field_72984_F.func_76318_c("blockEntities");
+        LagSpikeHelper.processLagSpikes(this, LagSpikeHelper.TickPhase.TILE_ENTITY, LagSpikeHelper.PrePostSubPhase.PRE);
 
         if (!this.field_147483_b.isEmpty())
         {
-            this.field_175730_i.removeAll(this.field_147483_b);
-            this.field_147482_g.removeAll(this.field_147483_b);
+            // Optimization for tile entity removal CARPET-XCOM
+            if (!CarpetSettings.optimizedTileEntityRemoval) {
+                this.field_175730_i.removeAll(this.field_147483_b);
+                this.field_147482_g.removeAll(this.field_147483_b);
+            } else {
+                Set<TileEntity> remove = Collections.newSetFromMap(new java.util.IdentityHashMap<>());
+                remove.addAll(this.field_147483_b);
+                this.field_175730_i.removeAll(remove);
+                this.field_147482_g.removeAll(remove);
+            }
             this.field_147483_b.clear();
         }
 
         this.field_147481_N = true;
         Iterator<TileEntity> iterator = this.field_175730_i.iterator();
 
+        Set<TileEntity> tileEntitiesRemovedInTick = new HashSet<>(); // CM
+
         while (iterator.hasNext())
         {
             TileEntity tileentity = iterator.next();
+            CarpetProfiler.start_tileentity_section(world_name, tileentity);
 
             if (!tileentity.func_145837_r() && tileentity.func_145830_o())
             {
@@ -1471,12 +1641,14 @@
                 {
                     try
                     {
-                        this.field_72984_F.func_194340_a(() ->
-                        {
-                            return String.valueOf((Object)TileEntity.func_190559_a(tileentity.getClass()));
-                        });
-                        ((ITickable)tileentity).func_73660_a();
-                        this.field_72984_F.func_76319_b();
+                        if (TickSpeed.process_entities) {
+                            this.field_72984_F.func_194340_a(() ->
+                            {
+                                return String.valueOf((Object) TileEntity.func_190559_a(tileentity.getClass()));
+                            });
+                            ((ITickable) tileentity).func_73660_a();
+                            this.field_72984_F.func_76319_b();
+                        }
                     }
                     catch (Throwable throwable)
                     {
@@ -1490,16 +1662,26 @@
 
             if (tileentity.func_145837_r())
             {
+                if (CarpetSettings.optimizedTileEntityRemoval) {
+                    tileEntitiesRemovedInTick.add(tileentity);
+                } else {
                 iterator.remove();
                 this.field_147482_g.remove(tileentity);
+                }
 
                 if (this.func_175667_e(tileentity.func_174877_v()))
                 {
                     this.func_175726_f(tileentity.func_174877_v()).func_177425_e(tileentity.func_174877_v());
                 }
             }
+            CarpetProfiler.end_current_entity_section();
         }
 
+        if (CarpetSettings.optimizedTileEntityRemoval) {
+            this.field_175730_i.removeAll(tileEntitiesRemovedInTick);
+            this.field_147482_g.removeAll(tileEntitiesRemovedInTick);
+        }
+
         this.field_147481_N = false;
         this.field_72984_F.func_76318_c("pendingBlockEntities");
 
@@ -1528,6 +1710,8 @@
 
             this.field_147484_a.clear();
         }
+        LagSpikeHelper.processLagSpikes(this, LagSpikeHelper.TickPhase.TILE_ENTITY, LagSpikeHelper.PrePostSubPhase.POST);
+        CarpetProfiler.end_current_section();
 
         this.field_72984_F.func_76319_b();
         this.field_72984_F.func_76319_b();
@@ -1602,11 +1786,15 @@
 
             if (p_72866_1_.func_184218_aH())
             {
-                p_72866_1_.func_70098_U();
+                if(!CarpetSettings.commandLazyChunkBehavior || LazyChunkBehaviorHelper.shouldUpdate(p_72866_1_)) {
+                    p_72866_1_.func_70098_U();
+                }
             }
             else
             {
-                p_72866_1_.func_70071_h_();
+                if(!CarpetSettings.commandLazyChunkBehavior || LazyChunkBehaviorHelper.shouldUpdate(p_72866_1_)) {
+                    p_72866_1_.func_70071_h_();
+                }
             }
         }
 
@@ -1648,7 +1836,8 @@
                 this.func_72964_e(p_72866_1_.field_70176_ah, p_72866_1_.field_70164_aj).func_76608_a(p_72866_1_, p_72866_1_.field_70162_ai);
             }
 
-            if (!p_72866_1_.func_184189_br() && !this.func_175680_a(i3, k3, true))
+            // Faster entitys can move into unloaded chunks and can get stuck in memory lagging the server. this fixes it CARPET-XCOM
+            if (!CarpetSettings.unloadedEntityFix && !p_72866_1_.func_184189_br() && !this.func_175680_a(i3, k3, true))
             {
                 p_72866_1_.field_70175_ag = false;
             }
@@ -1670,7 +1859,11 @@
                 }
                 else
                 {
-                    entity4.func_184210_p();
+                    if (CarpetSettings.dismountFix) {
+                        entity4.dismountRidingEntityBase();
+                    } else {
+                        entity4.func_184210_p();
+                    }
                 }
             }
         }
@@ -1689,7 +1882,7 @@
         {
             Entity entity4 = list.get(j2);
 
-            if (!entity4.field_70128_L && entity4.field_70156_m && entity4 != p_72917_2_ && (p_72917_2_ == null || entity4.func_184223_x(p_72917_2_)))
+            if (!entity4.field_70128_L && entity4.field_70156_m && entity4 != p_72917_2_ && (p_72917_2_ == null || entity4.func_184223_x(p_72917_2_) || CarpetSettings._1_8Spawning))
             {
                 return false;
             }
@@ -2153,6 +2346,16 @@
                         {
                             this.field_72986_A.func_76090_f(this.field_73012_v.nextInt(168000) + 12000);
                         }
+                        // Log Weather CARPET-XCOM
+                        if (LoggerRegistry.__weather)
+                        {
+                            LoggerRegistry.getLogger("weather").log(()-> new ITextComponent[]{
+                                            Messenger.s(null, "Thunder is set to: " + this.field_72986_A.func_76061_m() + " time: " + this.field_72986_A.func_76071_n() + " Server time: " + func_73046_m().func_71259_af())
+                                    },
+                                    "TYPE", "Thunder",
+                                    "THUNDERING", this.field_72986_A.func_76061_m(),
+                                    "TIME", this.field_72986_A.func_76071_n());
+                        }
                     }
                     else
                     {
@@ -2177,6 +2380,16 @@
                         {
                             this.field_72986_A.func_76080_g(this.field_73012_v.nextInt(168000) + 12000);
                         }
+                        // Log Weather CARPET-XCOM
+                        if (LoggerRegistry.__weather)
+                        {
+                            LoggerRegistry.getLogger("weather").log(()-> new ITextComponent[]{
+                                            Messenger.s(null, "Rain is set to: " + this.field_72986_A.func_76059_o() + " time: " + this.field_72986_A.func_76083_p() + " Server time: " + func_73046_m().func_71259_af())
+                                    },
+                                    "TYPE", "Rain",
+                                    "RAINING", this.field_72986_A.func_76059_o(),
+                                    "TIME", this.field_72986_A.func_76083_p());
+                        }
                     }
                     else
                     {
@@ -2387,6 +2600,11 @@
 
     public boolean func_180500_c(EnumSkyBlock p_180500_1_, BlockPos p_180500_2_)
     {
+        // NewLight PHIPRO-CARPET
+        if (CarpetSettings.newLight){
+            this.lightingEngine.scheduleLightUpdate(p_180500_1_, p_180500_2_);
+            return true;
+        }
         if (!this.func_175648_a(p_180500_2_, 17, false))
         {
             return false;
@@ -2699,7 +2917,8 @@
         IBlockState iblockstate1 = this.func_180495_p(p_190527_2_);
         AxisAlignedBB axisalignedbb = p_190527_3_ ? null : p_190527_1_.func_176223_P().func_185890_d(this, p_190527_2_);
 
-        if (axisalignedbb != Block.field_185506_k && !this.func_72917_a(axisalignedbb.func_186670_a(p_190527_2_), p_190527_5_))
+        // Added check to ignore entitys when placing blocks Carpet-XCOM
+        if (!CarpetSettings.ignoreEntityWhenPlacing && axisalignedbb != Block.field_185506_k && !this.func_72917_a(axisalignedbb.func_186670_a(p_190527_2_), p_190527_5_))
         {
             return false;
         }
@@ -3267,30 +3486,41 @@
 
     public void func_175666_e(BlockPos p_175666_1_, Block p_175666_2_)
     {
-        for (EnumFacing enumfacing : EnumFacing.Plane.HORIZONTAL)
+        if(carpet.carpetclient.CarpetClientChunkLogger.logger.enabled)
+            carpet.carpetclient.CarpetClientChunkLogger.setReason("Comperator updates for inventory changes");
+        if (CarpetSettings.optimizedTileEntities)
         {
-            BlockPos blockpos1 = p_175666_1_.func_177972_a(enumfacing);
-
-            if (this.func_175667_e(blockpos1))
+            // CARPET-optimizedTileEntities: Enhanced behavior
+            TileEntityOptimizer.updateComparatorsAndLazyTileEntities(this, p_175666_1_, p_175666_2_);
+        }
+        else
+        {
+            for (EnumFacing enumfacing : EnumFacing.Plane.HORIZONTAL)
             {
-                IBlockState iblockstate1 = this.func_180495_p(blockpos1);
+                BlockPos blockpos1 = p_175666_1_.func_177972_a(enumfacing);
 
-                if (Blocks.field_150441_bU.func_185547_C(iblockstate1))
-                {
-                    iblockstate1.func_189546_a(this, blockpos1, p_175666_2_, p_175666_1_);
-                }
-                else if (iblockstate1.func_185915_l())
-                {
-                    blockpos1 = blockpos1.func_177972_a(enumfacing);
-                    iblockstate1 = this.func_180495_p(blockpos1);
+                if (this.func_175667_e(blockpos1)) {
+                    IBlockState iblockstate1 = this.func_180495_p(blockpos1);
 
-                    if (Blocks.field_150441_bU.func_185547_C(iblockstate1))
-                    {
+                    if (Blocks.field_150441_bU.func_185547_C(iblockstate1)) {
                         iblockstate1.func_189546_a(this, blockpos1, p_175666_2_, p_175666_1_);
+                    } else if (iblockstate1.func_185915_l()) {
+                        blockpos1 = blockpos1.func_177972_a(enumfacing);
+                        iblockstate1 = this.func_180495_p(blockpos1);
+
+                        if (Blocks.field_150441_bU.func_185547_C(iblockstate1)) {
+                            iblockstate1.func_189546_a(this, blockpos1, p_175666_2_, p_175666_1_);
+                        }
                     }
                 }
             }
         }
+        carpet.carpetclient.CarpetClientChunkLogger.resetReason();
+        // ----- RSMM Start ----- //
+        if (CarpetSettings.redstoneMultimeter) {
+            StateChangeEventDispatcher.dispatchEvent(this, p_175666_1_);
+        }
+        // ----- RSMM End ----- //
     }
 
     public DifficultyInstance func_175649_E(BlockPos p_175649_1_)
@@ -3361,4 +3591,128 @@
     {
         return null;
     }
+
+    AtomicLong scrambledSeed;
+    public long getRandSeed(){
+        try
+        {
+            if(scrambledSeed == null) {
+                Field field = Random.class.getDeclaredField("seed");
+                field.setAccessible(true);
+                scrambledSeed = (AtomicLong) field.get(field_73012_v);   //this needs to be XOR'd with 0x5DEECE66DL
+            }
+            return scrambledSeed.get();
+            // Minecraft.getMinecraft().player.sendChatMessage(chunk.x + ", " + chunk.z + ", seed " + theSeed);
+        } catch (Exception e) {}
+
+        return 0;
+    }
+
+    // Update Suppression crash fixes CARPET-XCOM
+    public void neighborChangedUpdateSuppressionFixed(BlockPos pos, final Block blockIn, BlockPos fromPos)
+    {
+        if (!this.field_72995_K)
+        {
+            IBlockState iblockstate = this.func_180495_p(pos);
+
+            try
+            {
+                iblockstate.func_189546_a(this, pos, blockIn, fromPos);
+            }
+            catch (ThrowableSuppression e)
+            {
+                throw new ThrowableSuppression("Update Suppression");
+            }
+            catch (StackOverflowError e)
+            {
+                throw new ThrowableSuppression("Update Suppression");
+            }
+            catch (Throwable throwable)
+            {
+                CrashReport crashreport = CrashReport.func_85055_a(throwable, "Exception while updating neighbours");
+                CrashReportCategory crashreportcategory = crashreport.func_85058_a("Block being updated");
+                crashreportcategory.func_189529_a("Source block type", new ICrashReportDetail<String>()
+                {
+                    public String call() throws Exception
+                    {
+                        try
+                        {
+                            return String.format("ID #%d (%s // %s)", Block.func_149682_b(blockIn), blockIn.func_149739_a(), blockIn.getClass().getCanonicalName());
+                        }
+                        catch (Throwable var2)
+                        {
+                            return "ID #" + Block.func_149682_b(blockIn);
+                        }
+                    }
+                });
+                CrashReportCategory.func_175750_a(crashreportcategory, pos, iblockstate);
+                throw new ReportedException(crashreport);
+            }
+            // ----- RSMM Start ----- //
+            if (CarpetSettings.redstoneMultimeter) {
+                StateChangeEventDispatcher.dispatchEvent(this, pos);
+            }
+            // ----- RSMM End ----- //
+        }
+    }
+
+    // Update Suppression crash fixes CARPET-XCOM
+    public void observedNeighborChangedUpdateSuppressionFixed(BlockPos pos, final Block changedBlock, BlockPos changedBlockPos)
+    {
+        if (!this.field_72995_K)
+        {
+            IBlockState iblockstate = this.func_180495_p(pos);
+
+            if (iblockstate.func_177230_c() == Blocks.field_190976_dk)
+            {
+                try
+                {
+                    ((BlockObserver)iblockstate.func_177230_c()).func_190962_b(iblockstate, this, pos, changedBlock, changedBlockPos);
+                }
+                catch (StackOverflowError e)
+                {
+                    throw new ThrowableSuppression("Update Suppression");
+                }
+                catch (Throwable throwable)
+                {
+                    CrashReport crashreport = CrashReport.func_85055_a(throwable, "Exception while updating neighbours");
+                    CrashReportCategory crashreportcategory = crashreport.func_85058_a("Block being updated");
+                    crashreportcategory.func_189529_a("Source block type", new ICrashReportDetail<String>()
+                    {
+                        public String call() throws Exception
+                        {
+                            try
+                            {
+                                return String.format("ID #%d (%s // %s)", Block.func_149682_b(changedBlock), changedBlock.func_149739_a(), changedBlock.getClass().getCanonicalName());
+                            }
+                            catch (Throwable var2)
+                            {
+                                return "ID #" + Block.func_149682_b(changedBlock);
+                            }
+                        }
+                    });
+                    CrashReportCategory.func_175750_a(crashreportcategory, pos, iblockstate);
+                    throw new ReportedException(crashreport);
+                }
+            }
+            // ----- RSMM Start ----- //
+            if (CarpetSettings.redstoneMultimeter) {
+                StateChangeEventDispatcher.dispatchEvent(this, pos);
+            }
+            // ----- RSMM End ----- //
+        }
+    }
+
+    // Method to check if a block can be removed from the world CARPET-XCOM
+    public boolean isRemovableBlock(BlockPos pos) {
+        if (this.func_189509_E(pos)) {
+            return false;
+        } else if (!this.field_72995_K && this.field_72986_A.func_76067_t() == WorldType.field_180272_g) {
+            return false;
+        } else if (func_180495_p(pos) == Blocks.field_150350_a.func_176223_P()) {
+            return false;
+        }
+
+        return true;
+    }
 }
