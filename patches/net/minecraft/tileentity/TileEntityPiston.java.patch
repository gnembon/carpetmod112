--- ../src-base/minecraft/net/minecraft/tileentity/TileEntityPiston.java
+++ ../src-work/minecraft/net/minecraft/tileentity/TileEntityPiston.java
@@ -20,12 +20,22 @@
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
 
+import carpet.CarpetSettings;
+import carpet.utils.PistonFixes;
+import net.minecraft.block.ITileEntityProvider;
+
 public class TileEntityPiston extends TileEntity implements ITickable
 {
     private IBlockState field_174932_a;
     private EnumFacing field_174931_f;
     private boolean field_145875_k;
     private boolean field_145872_l;
+
+    // Movable Tile entity fix CARPET-2No2Name
+    private TileEntity carriedTileEntity;
+    // [CM] Piston ghost blocks fix
+    public long lastTicked;
+
     private static final ThreadLocal<EnumFacing> field_190613_i = new ThreadLocal<EnumFacing>()
     {
         protected EnumFacing initialValue()
@@ -34,7 +44,7 @@
         }
     };
     private float field_145873_m;
-    private float field_145870_n;
+    public float field_145870_n; // [CM] Change access to public for piston ghost blocks fix
 
     public TileEntityPiston()
     {
@@ -100,8 +110,22 @@
         return !this.func_145868_b() && this.func_145867_d() ? Blocks.field_150332_K.func_176223_P().func_177226_a(BlockPistonExtension.field_176325_b, this.field_174932_a.func_177230_c() == Blocks.field_150320_F ? BlockPistonExtension.EnumPistonType.STICKY : BlockPistonExtension.EnumPistonType.DEFAULT).func_177226_a(BlockPistonExtension.field_176387_N, this.field_174932_a.func_177229_b(BlockPistonBase.field_176387_N)) : this.field_174932_a;
     }
 
+    /* carpet mod moving entities selector */
     private void func_184322_i(float p_184322_1_)
     {
+        if (CarpetSettings.pocketPushing)
+        {
+            moveCollidedEntities_old();
+        }
+        else
+        {
+            moveCollidedEntities_new(p_184322_1_);
+        }
+    }
+    //CM end
+
+    private void moveCollidedEntities_new(float p_184322_1_)
+    {
         EnumFacing enumfacing = this.field_145875_k ? this.field_174931_f : this.field_174931_f.func_176734_d();
         double d0 = (double)(p_184322_1_ - this.field_145873_m);
         List<AxisAlignedBB> list = Lists.<AxisAlignedBB>newArrayList();
@@ -166,6 +190,11 @@
                             {
                                 this.func_190605_a(entity, enumfacing, d0);
                             }
+
+                            if(CarpetSettings.unloadedEntityFix)
+                            {
+                                field_145850_b.func_72866_a(entity, false);
+                            }
                         }
                     }
                 }
@@ -173,6 +202,92 @@
         }
     }
 
+    //CM added this old 1.10 behaviour
+    private void moveCollidedEntities_old()
+    {
+        AxisAlignedBB axisalignedbb = this.func_184321_a(this.field_145850_b, this.field_174879_c).func_186670_a(this.field_174879_c);
+        List<Entity> list = this.field_145850_b.func_72839_b((Entity)null, axisalignedbb);
+
+        if (!list.isEmpty())
+        {
+            EnumFacing enumfacing = this.field_145875_k ? this.field_174931_f : this.field_174931_f.func_176734_d();
+
+            for (int i = 0; i < list.size(); ++i)
+            {
+                Entity entity = (Entity)list.get(i);
+
+                if (entity.func_184192_z() != EnumPushReaction.IGNORE)
+                {
+                    if (this.field_174932_a.func_177230_c() == Blocks.field_180399_cE)
+                    {
+                        switch (enumfacing.func_176740_k())
+                        {
+                            case X:
+                                entity.field_70159_w = (double)enumfacing.func_82601_c();
+                                break;
+
+                            case Y:
+                                entity.field_70181_x = (double)enumfacing.func_96559_d();
+                                break;
+
+                            case Z:
+                                entity.field_70179_y = (double)enumfacing.func_82599_e();
+                        }
+                    }
+
+                    double d0 = 0.0D;
+                    double d1 = 0.0D;
+                    double d2 = 0.0D;
+                    AxisAlignedBB axisalignedbb1 = entity.func_174813_aQ();
+
+                    switch (enumfacing.func_176740_k())
+                    {
+                        case X:
+                            if (enumfacing.func_176743_c() == EnumFacing.AxisDirection.POSITIVE)
+                            {
+                                d0 = axisalignedbb.field_72336_d - axisalignedbb1.field_72340_a;
+                            }
+                            else
+                            {
+                                d0 = axisalignedbb1.field_72336_d - axisalignedbb.field_72340_a;
+                            }
+
+                            d0 = d0 + 0.01D;
+                            break;
+
+                        case Y:
+                            if (enumfacing.func_176743_c() == EnumFacing.AxisDirection.POSITIVE)
+                            {
+                                d1 = axisalignedbb.field_72337_e - axisalignedbb1.field_72338_b;
+                            }
+                            else
+                            {
+                                d1 = axisalignedbb1.field_72337_e - axisalignedbb.field_72338_b;
+                            }
+
+                            d1 = d1 + 0.01D;
+                            break;
+
+                        case Z:
+                            if (enumfacing.func_176743_c() == EnumFacing.AxisDirection.POSITIVE)
+                            {
+                                d2 = axisalignedbb.field_72334_f - axisalignedbb1.field_72339_c;
+                            }
+                            else
+                            {
+                                d2 = axisalignedbb1.field_72334_f - axisalignedbb.field_72339_c;
+                            }
+
+                            d2 = d2 + 0.01D;
+                    }
+
+                    entity.func_70091_d(MoverType.SELF, d0 * (double)enumfacing.func_82601_c(), d1 * (double)enumfacing.func_96559_d(), d2 * (double)enumfacing.func_82599_e());
+                }
+            }
+        }
+    }
+    //CM end
+
     private AxisAlignedBB func_191515_a(List<AxisAlignedBB> p_191515_1_)
     {
         double d0 = 0.0D;
@@ -286,25 +401,69 @@
 
             if (this.field_145850_b.func_180495_p(this.field_174879_c).func_177230_c() == Blocks.field_180384_M)
             {
-                this.field_145850_b.func_180501_a(this.field_174879_c, this.field_174932_a, 3);
-                this.field_145850_b.func_190524_a(this.field_174879_c, this.field_174932_a.func_177230_c(), this.field_174879_c);
+                // Movable Tile entity fix CARPET-2No2Name
+                if(CarpetSettings.movableTileEntities || CarpetSettings.autocrafter)
+                {
+                    this.placeBlock();
+                }
+                else
+                {
+                    //vanilla behaviour
+                    this.field_145850_b.func_180501_a(this.field_174879_c, this.field_174932_a, 3);
+                    this.field_145850_b.func_190524_a(this.field_174879_c, this.field_174932_a.func_177230_c(), this.field_174879_c);
+                }
             }
+            else if(CarpetSettings.movableTileEntities || CarpetSettings.autocrafter)
+            {
+                //Handle TNT Explosions or other ways the movingBlock is broken
+                //Also /setblock will cause this to be called, and drop e.g. a moving chest's contents. This is MC-40380 (BlockEntities that aren't Inventories drop stuff when setblock is called )
+                if (this.carriedTileEntity != null && this.field_145850_b.func_180495_p(this.field_174879_c).func_177230_c() == Blocks.field_150350_a) {
+                  this.placeBlock();
+                  this.field_145850_b.func_175698_g(this.field_174879_c);
+                }
+            }
         }
     }
 
     public void func_73660_a()
     {
+        // CM START
+        if (CarpetSettings.pistonClippingFix > 0) {
+            PistonFixes.synchronizeClient();
+        }
+        // [CM] Piston ghost blocks fix
+        this.lastTicked = this.field_145850_b.func_82737_E();
+        // CM END
         this.field_145870_n = this.field_145873_m;
 
         if (this.field_145870_n >= 1.0F)
         {
+            if (carpet.carpetclient.CarpetClientChunkLogger.logger.enabled)
+                carpet.carpetclient.CarpetClientChunkLogger.setReason("Piston block finishes moving");
             this.field_145850_b.func_175713_t(this.field_174879_c);
+            carpet.carpetclient.CarpetClientChunkLogger.resetReason();
             this.func_145843_s();
 
             if (this.field_145850_b.func_180495_p(this.field_174879_c).func_177230_c() == Blocks.field_180384_M)
             {
-                this.field_145850_b.func_180501_a(this.field_174879_c, this.field_174932_a, 3);
-                this.field_145850_b.func_190524_a(this.field_174879_c, this.field_174932_a.func_177230_c(), this.field_174879_c);
+                //CM piston_ghost_blocks
+                if (CarpetSettings.pistonGhostBlocksFix == CarpetSettings.PistonGhostBlocksFix.serverOnly)
+                {
+                    IBlockState blockstate = this.field_145850_b.func_180495_p(this.field_174879_c);
+                    this.field_145850_b.func_184138_a(field_174879_c.func_177972_a(blockstate.func_177229_b(BlockPistonExtension.field_176387_N).func_176734_d()), blockstate, blockstate, 0);
+                }
+                //CM end
+                
+                // Movable Tile entity fix CARPET-2No2Name
+                if(CarpetSettings.movableTileEntities || CarpetSettings.autocrafter)
+                {
+                    this.placeBlock();
+                }
+                else //vanilla finally
+                {
+                    this.field_145850_b.func_180501_a(this.field_174879_c, this.field_174932_a, 3);
+                    this.field_145850_b.func_190524_a(this.field_174879_c, this.field_174932_a.func_177230_c(), this.field_174879_c);
+                }
             }
         }
         else
@@ -331,8 +490,19 @@
         this.field_174931_f = EnumFacing.func_82600_a(p_145839_1_.func_74762_e("facing"));
         this.field_145873_m = p_145839_1_.func_74760_g("progress");
         this.field_145870_n = this.field_145873_m;
+        if (CarpetSettings.pistonSerializationFix && p_145839_1_.func_150297_b("lastProgress", 5)) // CM: piston serialization fix
+            this.field_145870_n = p_145839_1_.func_74760_g("lastProgress");
         this.field_145875_k = p_145839_1_.func_74767_n("extending");
         this.field_145872_l = p_145839_1_.func_74767_n("source");
+
+        // Movable Tile entity fix CARPET-2No2Name
+        if((CarpetSettings.movableTileEntities || CarpetSettings.autocrafter) && p_145839_1_.func_150297_b("carriedTileEntity", 10))
+        {
+            if(this.field_174932_a.func_177230_c() instanceof ITileEntityProvider)
+                this.carriedTileEntity = ((ITileEntityProvider)(this.field_174932_a.func_177230_c())).func_149915_a(this.field_145850_b, this.field_174932_a.func_177230_c().func_176201_c(this.field_174932_a));
+            if(carriedTileEntity != null) //Can actually be null, as BlockPistonMoving.createNewTileEntity(...) returns null
+                this.carriedTileEntity.func_145839_a(p_145839_1_.func_74775_l("carriedTileEntity"));
+        }
     }
 
     public NBTTagCompound func_189515_b(NBTTagCompound p_189515_1_)
@@ -341,9 +511,24 @@
         p_189515_1_.func_74768_a("blockId", Block.func_149682_b(this.field_174932_a.func_177230_c()));
         p_189515_1_.func_74768_a("blockData", this.field_174932_a.func_177230_c().func_176201_c(this.field_174932_a));
         p_189515_1_.func_74768_a("facing", this.field_174931_f.func_176745_a());
+        if (CarpetSettings.pistonSerializationFix) // CM: piston serialization fix
+        {
+            p_189515_1_.func_74776_a("progress", this.field_145873_m);
+            p_189515_1_.func_74776_a("lastProgress", this.field_145870_n);
+        }
+        else
+        {
         p_189515_1_.func_74776_a("progress", this.field_145870_n);
+        }
         p_189515_1_.func_74757_a("extending", this.field_145875_k);
         p_189515_1_.func_74757_a("source", this.field_145872_l);
+
+        // Movable Tile entity fix CARPET-2No2Name
+        if((CarpetSettings.movableTileEntities || CarpetSettings.autocrafter) && this.carriedTileEntity != null)
+        {
+            p_189515_1_.func_74782_a("carriedTileEntity", this.carriedTileEntity.func_189515_b(new NBTTagCompound()));
+        }
+
         return p_189515_1_;
     }
 
@@ -382,4 +567,34 @@
             }
         }
     }
+
+    // Movable Tile entity fix CARPET-2No2Name
+    public void setCarriedTileEntity(TileEntity tileEntity)
+    {
+        this.carriedTileEntity = tileEntity;
+    }
+    // Movable Tile entity fix CARPET-2No2Name
+    private void placeBlock() {
+        this.field_145850_b.func_180501_a(this.field_174879_c, this.field_174932_a, 18); //Flag 18 => No block updates, TileEntity has to be placed first
+
+        if(!this.field_145850_b.field_72995_K)
+        {
+        if(carriedTileEntity != null) {
+            this.field_145850_b.func_175713_t(this.field_174879_c);
+            carriedTileEntity.func_145829_t();
+            this.field_145850_b.func_175690_a(this.field_174879_c, carriedTileEntity);
+        }
+
+        //Update neighbors, comparators and observers now (same order as setBlockState would have if flag was set to 3 (default))
+        //This should not change piston behavior for vanilla-pushable blocks at all
+
+        this.field_145850_b.func_175722_b(field_174879_c, Blocks.field_180384_M, true);
+        if (this.field_174932_a.func_185912_n())
+        {
+        this.field_145850_b.func_175666_e(field_174879_c, this.field_174932_a.func_177230_c());
+        }
+        this.field_145850_b.func_190522_c(field_174879_c, this.field_174932_a.func_177230_c());
+        }
+        this.field_145850_b.func_190524_a(this.field_174879_c, this.field_174932_a.func_177230_c(), this.field_174879_c);
+    }
 }
