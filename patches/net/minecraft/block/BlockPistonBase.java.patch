--- ../src-base/minecraft/net/minecraft/block/BlockPistonBase.java
+++ ../src-work/minecraft/net/minecraft/block/BlockPistonBase.java
@@ -1,8 +1,12 @@
 package net.minecraft.block;
 
 import com.google.common.collect.Lists;
+
+import java.util.HashSet;
 import java.util.List;
 import javax.annotation.Nullable;
+
+import it.unimi.dsi.fastutil.booleans.BooleanStack;
 import net.minecraft.block.material.EnumPushReaction;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.properties.IProperty;
@@ -29,7 +33,16 @@
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
 
-public class BlockPistonBase extends BlockDirectional
+import narcolepticfrog.rsmm.events.PistonPushEventDispatcher;
+import carpet.CarpetSettings;
+import carpet.utils.PistonFixes;
+import net.minecraft.world.WorldServer;
+
+import redstone.multimeter.block.MeterableBlock;
+import redstone.multimeter.helper.WorldHelper;
+import redstone.multimeter.server.Multimeter;
+
+public class BlockPistonBase extends BlockDirectional implements MeterableBlock /* RSMM */
 {
     public static final PropertyBool field_176320_b = PropertyBool.func_177716_a("extended");
     protected static final AxisAlignedBB field_185648_b = new AxisAlignedBB(0.0D, 0.0D, 0.0D, 0.75D, 1.0D, 1.0D);
@@ -39,6 +52,7 @@
     protected static final AxisAlignedBB field_185652_f = new AxisAlignedBB(0.0D, 0.0D, 0.0D, 1.0D, 0.75D, 1.0D);
     protected static final AxisAlignedBB field_185653_g = new AxisAlignedBB(0.0D, 0.25D, 0.0D, 1.0D, 1.0D, 1.0D);
     private final boolean field_150082_a;
+    private static HashSet<BlockPos> dupeFixLocations = new HashSet<>();
 
     public BlockPistonBase(boolean p_i45443_1_)
     {
@@ -99,7 +113,8 @@
 
     public void func_180633_a(World p_180633_1_, BlockPos p_180633_2_, IBlockState p_180633_3_, EntityLivingBase p_180633_4_, ItemStack p_180633_5_)
     {
-        p_180633_1_.func_180501_a(p_180633_2_, p_180633_3_.func_177226_a(field_176387_N, EnumFacing.func_190914_a(p_180633_2_, p_180633_4_)), 2);
+        if (!CarpetSettings.accurateBlockPlacement)
+            p_180633_1_.func_180501_a(p_180633_2_, p_180633_3_.func_177226_a(field_176387_N, EnumFacing.func_190914_a(p_180633_2_, p_180633_4_)), 2);
 
         if (!p_180633_1_.field_72995_K)
         {
@@ -130,43 +145,117 @@
 
     private void func_176316_e(World p_176316_1_, BlockPos p_176316_2_, IBlockState p_176316_3_)
     {
+        if (carpet.carpetclient.CarpetClientChunkLogger.logger.enabled)
+            carpet.carpetclient.CarpetClientChunkLogger.setReason("Piston scheduled by power source");
+
         EnumFacing enumfacing = (EnumFacing)p_176316_3_.func_177229_b(field_176387_N);
         boolean flag = this.func_176318_b(p_176316_1_, p_176316_2_, enumfacing);
 
-        if (flag && !((Boolean)p_176316_3_.func_177229_b(field_176320_b)).booleanValue())
+        boolean extended = p_176316_3_.func_177229_b(field_176320_b); // CM only get blockstate value once
+
+        // CM START
+        if (CarpetSettings.pistonClippingFix > 0 && flag != extended)
+            PistonFixes.synchronizeClient();
+        // CM END
+
+        if (flag && !extended)
         {
             if ((new BlockPistonStructureHelper(p_176316_1_, p_176316_2_, enumfacing, true)).func_177253_a())
             {
                 p_176316_1_.func_175641_c(p_176316_2_, this, 0, enumfacing.func_176745_a());
             }
         }
-        else if (!flag && ((Boolean)p_176316_3_.func_177229_b(field_176320_b)).booleanValue())
+        else if (!flag && extended)
         {
-            p_176316_1_.func_175641_c(p_176316_2_, this, 1, enumfacing.func_176745_a());
+            // Double retraction for pistons CARPET-XCOM
+            if(CarpetSettings.doubleRetraction)
+            {
+                p_176316_1_.func_180501_a(p_176316_2_,  p_176316_3_.func_177226_a(field_176320_b,  Boolean.valueOf(false)), 2);
+            }
+            
+            // [CM] Piston ghost blocks fix - start
+            int suppress_move = 0;
+            if (CarpetSettings.pistonGhostBlocksFix == CarpetSettings.PistonGhostBlocksFix.clientAndServer)
+            {
+                final EnumFacing facing = p_176316_3_.func_177229_b(field_176387_N);
+    
+                final BlockPos blockpos = new BlockPos(p_176316_2_).func_177967_a(facing, 2);
+                final IBlockState iblockstate = p_176316_1_.func_180495_p(blockpos);
+    
+                if (iblockstate.func_177230_c() == Blocks.field_180384_M)
+                {
+                    final TileEntity tileentity = p_176316_1_.func_175625_s(blockpos);
+        
+                    if (tileentity instanceof TileEntityPiston)
+                    {
+                        final TileEntityPiston tileentitypiston = (TileEntityPiston) tileentity;
+                        if (tileentitypiston.func_174930_e() == facing && tileentitypiston.func_145868_b()
+                                    && (tileentitypiston.field_145870_n < 0.5F
+                                                || tileentitypiston.func_145831_w().func_82737_E() == tileentitypiston.lastTicked
+                                                || !((WorldServer) p_176316_1_).haveBlockActionsProcessed()))
+                        {
+                            suppress_move = 16;
+                        }
+                    }
+                }
+            }
+            p_176316_1_.func_175641_c(p_176316_2_, this, 1,  enumfacing.func_176745_a() | suppress_move); // [CM] Piston ghost blocks fix - | suppress_move
+            // [CM] Piston ghost blocks fix - end
         }
+
+        carpet.carpetclient.CarpetClientChunkLogger.resetReason();
     }
 
-    private boolean func_176318_b(World p_176318_1_, BlockPos p_176318_2_, EnumFacing p_176318_3_)
+    /*
+     * This if statement checks if the the pulling block (block that is 2 blocks infront of the extended piston)
+     * is a non-moving block and returns a meta value of 16 so it can tell the client to ignore pulling blocks 
+     * even if the client can pull them. CARPET-XCOM
+     */
+    private int ignoreMovingBlockMeta(World worldIn, BlockPos pos, EnumFacing enumfacing) {
+        BlockPos blockpos = pos.func_177982_a(enumfacing.func_82601_c() * 2, enumfacing.func_96559_d() * 2, enumfacing.func_82599_e() * 2);
+        IBlockState iblockstate = worldIn.func_180495_p(blockpos);
+        Block block = iblockstate.func_177230_c();
+        
+        if (block == Blocks.field_180384_M) return 16;
+        
+        return 0;
+    }
+
+    // RSMM - wrapped method
+    public boolean func_176318_b(World p_176318_1_, BlockPos p_176318_2_, EnumFacing p_176318_3_)
     {
+        boolean powered = _shouldBeExtended(p_176318_1_, p_176318_2_, p_176318_3_);
+        logPowered(p_176318_1_, p_176318_2_, powered); // RSMM
+        return powered;
+    }
+
+    private boolean _shouldBeExtended(World worldIn, BlockPos pos, EnumFacing facing)
+    {
         for (EnumFacing enumfacing : EnumFacing.values())
         {
-            if (enumfacing != p_176318_3_ && p_176318_1_.func_175709_b(p_176318_2_.func_177972_a(enumfacing), enumfacing))
+            if (enumfacing != facing && worldIn.func_175709_b(pos.func_177972_a(enumfacing), enumfacing))
             {
                 return true;
             }
         }
 
-        if (p_176318_1_.func_175709_b(p_176318_2_, EnumFacing.DOWN))
+        if (worldIn.func_175709_b(pos, EnumFacing.DOWN))
         {
             return true;
         }
         else
         {
-            BlockPos blockpos = p_176318_2_.func_177984_a();
+            /* carpet mod */
+            if (!CarpetSettings.quasiConnectivity)
+            {
+                return false;
+            }
+            /* end */
+            BlockPos blockpos = pos.func_177984_a();
 
             for (EnumFacing enumfacing1 : EnumFacing.values())
             {
-                if (enumfacing1 != EnumFacing.DOWN && p_176318_1_.func_175709_b(blockpos.func_177972_a(enumfacing1), enumfacing1))
+                if (enumfacing1 != EnumFacing.DOWN && worldIn.func_175709_b(blockpos.func_177972_a(enumfacing1), enumfacing1))
                 {
                     return true;
                 }
@@ -240,7 +329,11 @@
                         }
                     }
                 }
-
+                
+                // [CM] Piston ghost blocks fix
+                if ((p_189539_5_ & 16) == 16 && CarpetSettings.pistonGhostBlocksFix == CarpetSettings.PistonGhostBlocksFix.clientAndServer)
+                    flag1 = true;
+                
                 if (!flag1 && iblockstate.func_185904_a() != Material.field_151579_a && func_185646_a(iblockstate, p_189539_2_, blockpos, enumfacing.func_176734_d(), false, enumfacing) && (iblockstate.func_185905_o() == EnumPushReaction.NORMAL || block == Blocks.field_150331_J || block == Blocks.field_150320_F))
                 {
                     this.func_176319_a(p_189539_2_, p_189539_3_, enumfacing, false);
@@ -307,7 +400,15 @@
                     return false;
                 }
 
-                return !block.func_149716_u();
+                // Movable Tile entity fix CARPET-2No2Name
+                if(block instanceof BlockWorkbench) // auto crafting CAPRET-XCOM
+                    return true;
+                if(!block.func_149716_u())
+                    return true;
+                else if(CarpetSettings.movableTileEntities)
+                    return isPushableTileEntityBlock(block);
+                else
+                    return false;
             }
             else
             {
@@ -319,6 +420,14 @@
             return false;
         }
     }
+    
+    // Movable Tile entity fix CARPET-2No2Name
+    private static boolean isPushableTileEntityBlock(Block block)
+    {
+        //Making PISTON_EXTENSION (BlockPistonMoving) pushable would not work as its createNewTileEntity()-method returns null
+        return block != Blocks.field_150477_bB && block != Blocks.field_150381_bn && block != Blocks.field_185775_db
+        && block != Blocks.field_150384_bq && block != Blocks.field_150474_ac && block != Blocks.field_180384_M;
+    }
 
     private boolean func_176319_a(World p_176319_1_, BlockPos p_176319_2_, EnumFacing p_176319_3_, boolean p_176319_4_)
     {
@@ -342,6 +451,7 @@
             {
                 BlockPos blockpos = list.get(i);
                 list1.add(p_176319_1_.func_180495_p(blockpos).func_185899_b(p_176319_1_, blockpos));
+                dupeFixLocations.add(blockpos); // Added for duping fix CARPET-XCOM
             }
 
             List<BlockPos> list2 = blockpistonstructurehelper.func_177252_d();
@@ -358,15 +468,76 @@
                 --k;
                 aiblockstate[k] = iblockstate;
             }
+            
+         // Movable Tile entity fix CARPET-2No2Name
+            List<TileEntity> list1_TileEntities = Lists.<TileEntity>newArrayList();
+            if(CarpetSettings.movableTileEntities || CarpetSettings.autocrafter){
+                for (int i = 0; i < list.size(); ++i)
+                {
+                    BlockPos blockpos = list.get(i);
+                    TileEntity tileentity = p_176319_1_.func_175625_s(blockpos);
+                    list1_TileEntities.add(tileentity);
 
+                    if(tileentity != null)
+                    {
+                        p_176319_1_.func_175713_t(blockpos);
+                        tileentity.func_70296_d();
+                    }
+                }
+            }
+            
             for (int l = list.size() - 1; l >= 0; --l)
             {
                 BlockPos blockpos3 = list.get(l);
+                // ----- RSMM Start ------ //
+                if (CarpetSettings.redstoneMultimeterLegacy) {
+                    PistonPushEventDispatcher.dispatchEvent(p_176319_1_, blockpos3, enumfacing);
+                }
+                if (CarpetSettings.redstoneMultimeter && !p_176319_1_.field_72995_K) {
+                    Multimeter multimeter = WorldHelper.getMultimeter();
+
+                    multimeter.logMoved(p_176319_1_, blockpos3, enumfacing);
+                    multimeter.moveMeters(p_176319_1_, blockpos3, enumfacing);
+                }
+                // ----- RSMM End ----- //
                 IBlockState iblockstate2 = p_176319_1_.func_180495_p(blockpos3);
                 p_176319_1_.func_180501_a(blockpos3, Blocks.field_150350_a.func_176223_P(), 2);
                 blockpos3 = blockpos3.func_177972_a(enumfacing);
                 p_176319_1_.func_180501_a(blockpos3, Blocks.field_180384_M.func_176223_P().func_177226_a(field_176387_N, p_176319_3_), 4);
-                p_176319_1_.func_175690_a(blockpos3, BlockPistonMoving.func_185588_a(list1.get(l), p_176319_3_, p_176319_4_, false));
+
+                // Movable Tile entity fix CARPET-2No2Name
+                if(CarpetSettings.autocrafter && iblockstate2 instanceof BlockWorkbench){
+                    TileEntity tilePiston = BlockPistonMoving.func_185588_a(list1.get(l), p_176319_3_, p_176319_4_, false);
+                    ((TileEntityPiston)tilePiston).setCarriedTileEntity(list1_TileEntities.get(l));
+                    p_176319_1_.func_175690_a(blockpos3, tilePiston);
+                }else if(CarpetSettings.movableTileEntities && isPushableTileEntityBlock(iblockstate2.func_177230_c())){
+                    TileEntity tilePiston = BlockPistonMoving.func_185588_a(list1.get(l), p_176319_3_, p_176319_4_, false);
+                    ((TileEntityPiston)tilePiston).setCarriedTileEntity(list1_TileEntities.get(l));
+                    p_176319_1_.func_175690_a(blockpos3, tilePiston);
+                }else{
+                    p_176319_1_.func_175690_a(blockpos3, BlockPistonMoving.func_185588_a(list1.get(l), p_176319_3_, p_176319_4_, false));
+                }
+
                 --k;
                 aiblockstate[k] = iblockstate2;
             }
@@ -397,6 +568,8 @@
                 p_176319_1_.func_175685_c(blockpos2, Blocks.field_150332_K, false);
             }
 
+            dupeFixLocations.clear(); // Added for duping fix CARPET-XCOM
+
             return true;
         }
     }
@@ -439,4 +612,27 @@
         p_193383_2_ = this.func_176221_a(p_193383_2_, p_193383_1_, p_193383_3_);
         return p_193383_2_.func_177229_b(field_176387_N) != p_193383_4_.func_176734_d() && ((Boolean)p_193383_2_.func_177229_b(field_176320_b)).booleanValue() ? BlockFaceShape.UNDEFINED : BlockFaceShape.SOLID;
     }
+
+    // RSMM
+    @Override
+    public boolean logPoweredOnBlockUpdate() {
+        return false;
+    }
+
+    // RSMM
+    @Override
+    public boolean isPowered(World world, BlockPos pos, IBlockState state) {
+        return func_176318_b(world, pos, state.func_177229_b(field_176387_N));
+    }
+
+    // RSMM
+    @Override
+    public boolean isActive(World world, BlockPos pos, IBlockState state) {
+        return state.func_177229_b(field_176320_b);
+    }
+
+    // Added method for checking if block is being pushed for duping fixes CARPET-XCOM
+    public static boolean isBeingPushed(BlockPos pos){
+        return dupeFixLocations.contains(pos);
+    }
 }
