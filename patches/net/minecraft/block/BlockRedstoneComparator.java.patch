--- ../src-base/minecraft/net/minecraft/block/BlockRedstoneComparator.java
+++ ../src-work/minecraft/net/minecraft/block/BlockRedstoneComparator.java
@@ -1,6 +1,7 @@
 package net.minecraft.block;
 
 import com.google.common.base.Predicate;
+
 import java.util.List;
 import java.util.Random;
 import javax.annotation.Nullable;
@@ -33,6 +34,9 @@
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
 
+import carpet.logging.LoggerRegistry;
+import carpet.logging.logHelpers.InstantComparators;
+
 public class BlockRedstoneComparator extends BlockRedstoneDiode implements ITileEntityProvider
 {
     public static final PropertyBool field_176464_a = PropertyBool.func_177716_a("powered");
@@ -60,7 +64,7 @@
         return new ItemStack(Items.field_151132_bS);
     }
 
-    protected int func_176403_d(IBlockState p_176403_1_)
+    protected int getDelay(IBlockState state, World world, BlockPos pos)
     {
         return 2;
     }
@@ -155,6 +159,8 @@
             }
         }
 
+        logPowered(p_176397_1_, p_176397_2_, i > MIN_POWER); // RSMM
+
         return i;
     }
 
@@ -206,8 +212,32 @@
                 {
                     p_176398_1_.func_175654_a(p_176398_2_, this, 2, 0);
                 }
+                if (LoggerRegistry.__instantComparators)
+                {
+                    if (tileentity instanceof TileEntityComparator)
+                    {
+                        TileEntityComparator comparator = (TileEntityComparator) tileentity;
+                        int index = (int) Math.floorMod(p_176398_1_.func_82737_E() + 2, 3);
+                        comparator.scheduledOutputSignal[index] = i;
+                        comparator.buggy[index] = i == j;
+                    }
+                    else
+                    {
+                        InstantComparators.onNoTileEntity(p_176398_1_, p_176398_2_);
+                    }
+                }
             }
         }
+        else if (LoggerRegistry.__instantComparators)
+        {
+            TileEntity te = p_176398_1_.func_175625_s(p_176398_2_);
+            if (te instanceof TileEntityComparator)
+            {
+                TileEntityComparator comparator = (TileEntityComparator) te;
+                int index = (int) Math.floorMod(p_176398_1_.func_82737_E() + 2, 3);
+                comparator.scheduledOutputSignal[index] = func_176460_j(p_176398_1_, p_176398_2_, p_176398_3_);
+            }
+        }
     }
 
     private void func_176462_k(World p_176462_1_, BlockPos p_176462_2_, IBlockState p_176462_3_)
@@ -249,6 +279,22 @@
         }
 
         this.func_176462_k(p_180650_1_, p_180650_2_, p_180650_3_);
+
+        if (LoggerRegistry.__instantComparators)
+        {
+            TileEntity te = p_180650_1_.func_175625_s(p_180650_2_);
+            if (te instanceof TileEntityComparator)
+            {
+                TileEntityComparator comparator = (TileEntityComparator) te;
+                int index = (int) Math.floorMod(p_180650_1_.func_82737_E(), 3);
+                // output signal 0 is generally considered to just be a too fast pulse for a comparator, rather
+                // than an instant comparator
+                if (comparator.func_145996_a() != comparator.scheduledOutputSignal[index] && comparator.func_145996_a() != 0)
+                {
+                    InstantComparators.onInstantComparator(p_180650_1_, p_180650_2_, comparator.buggy[index]);
+                }
+            }
+        }
     }
 
     public void func_176213_c(World p_176213_1_, BlockPos p_176213_2_, IBlockState p_176213_3_)
@@ -319,6 +365,30 @@
         return this.func_176223_P().func_177226_a(field_185512_D, p_180642_8_.func_174811_aO().func_176734_d()).func_177226_a(field_176464_a, Boolean.valueOf(false)).func_177226_a(field_176463_b, BlockRedstoneComparator.Mode.COMPARE);
     }
 
+    // RSMM
+    @Override
+    public boolean isActive(World world, BlockPos pos, IBlockState state) {
+        return getPowerLevel(world, pos, state) > MIN_POWER;
+    }
+
+    // RSMM
+    @Override
+    public boolean logPowerChangeOnStateChange() {
+        return false;
+    }
+
+    // RSMM
+    @Override
+    public int getPowerLevel(World world, BlockPos pos, IBlockState state) {
+        TileEntity blockEntity = world.func_175625_s(pos);
+
+        if (blockEntity instanceof TileEntityComparator) {
+            return ((TileEntityComparator)blockEntity).func_145996_a();
+        }
+
+        return MIN_POWER;
+    }
+
     public static enum Mode implements IStringSerializable
     {
         COMPARE("compare"),
