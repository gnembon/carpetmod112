--- ../src-base/minecraft/net/minecraft/network/NetHandlerPlayServer.java
+++ ../src-work/minecraft/net/minecraft/network/NetHandlerPlayServer.java
@@ -1,5 +1,6 @@
 package net.minecraft.network;
 
+import carpet.carpetclient.CarpetClientChunkLogger;
 import com.google.common.collect.Lists;
 import com.google.common.primitives.Doubles;
 import com.google.common.primitives.Floats;
@@ -120,11 +121,17 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import carpet.CarpetServer;
+import carpet.CarpetSettings;
+import carpet.helpers.TickSpeed;
+import carpet.worldedit.WorldEditBridge;
+import net.minecraft.world.gen.structure.template.Template;
+
 public class NetHandlerPlayServer implements INetHandlerPlayServer, ITickable
 {
     private static final Logger field_147370_c = LogManager.getLogger();
     public final NetworkManager field_147371_a;
-    private final MinecraftServer field_147367_d;
+    protected final MinecraftServer field_147367_d; // CM changed from private
     public EntityPlayerMP field_147369_b;
     private int field_147368_e;
     private int field_147378_h;
@@ -247,9 +254,19 @@
         {
             this.func_194028_b(new TextComponentTranslation("multiplayer.disconnect.idling", new Object[0]));
         }
+
+        // [CM] PistonClippingFix -- Check if counter is above 0 and decrement
+        if(this.field_147369_b.pistonClippingCounter > 0 && CarpetSettings.pistonClippingFix > 0)
+        {
+            this.field_147369_b.pistonClippingCounter--;
+        }
+        else
+        {
+            this.field_147369_b.pistonClippingCounter = 0;
+        }
     }
 
-    private void func_184342_d()
+    public void func_184342_d()
     {
         this.field_184349_l = this.field_147369_b.field_70165_t;
         this.field_184350_m = this.field_147369_b.field_70163_u;
@@ -287,6 +304,11 @@
     {
         PacketThreadUtil.func_180031_a(p_147358_1_, this, this.field_147369_b.func_71121_q());
         this.field_147369_b.func_110430_a(p_147358_1_.func_149620_c(), p_147358_1_.func_192620_b(), p_147358_1_.func_149618_e(), p_147358_1_.func_149617_f());
+        //CM checking if player is moving, for commandTick
+        if (p_147358_1_.func_149620_c() != 0.0F || p_147358_1_.func_192620_b() != 0.0F || p_147358_1_.func_149618_e() || p_147358_1_.func_149617_f())
+        {
+            TickSpeed.reset_player_active_timeout();
+        }
     }
 
     private static boolean func_183006_b(CPacketPlayer p_183006_0_)
@@ -490,6 +512,10 @@
                         double d10 = this.field_147369_b.field_70159_w * this.field_147369_b.field_70159_w + this.field_147369_b.field_70181_x * this.field_147369_b.field_70181_x + this.field_147369_b.field_70179_y * this.field_147369_b.field_70179_y;
                         double d11 = d7 * d7 + d8 * d8 + d9 * d9;
 
+                        if (d11 > 0.0001D) // for commandTick
+                        {
+                            TickSpeed.reset_player_active_timeout();
+                        }
                         if (this.field_147369_b.func_70608_bn())
                         {
                             if (d11 > 1.0D)
@@ -508,7 +534,7 @@
                                 i = 1;
                             }
 
-                            if (!this.field_147369_b.func_184850_K() && (!this.field_147369_b.func_71121_q().func_82736_K().func_82766_b("disableElytraMovementCheck") || !this.field_147369_b.func_184613_cA()))
+                            if (!CarpetSettings.antiCheatSpeed && !this.field_147369_b.func_184850_K() && (!this.field_147369_b.func_71121_q().func_82736_K().func_82766_b("disableElytraMovementCheck") || !this.field_147369_b.func_184613_cA()))
                             {
                                 float f2 = this.field_147369_b.func_184613_cA() ? 300.0F : 100.0F;
 
@@ -554,7 +580,9 @@
                             this.field_147369_b.func_70080_a(d4, d5, d6, f, f1);
                             this.field_147369_b.func_71000_j(this.field_147369_b.field_70165_t - d0, this.field_147369_b.field_70163_u - d1, this.field_147369_b.field_70161_v - d2);
 
-                            if (!this.field_147369_b.field_70145_X && !this.field_147369_b.func_70608_bn())
+                            // [CM] PistonClippingFix -- Added PistonClippingcounter check to the if statement
+                            // Added fix to no clipping creative players. Carpet-XCOM
+                            if (!this.field_147369_b.field_70145_X && !this.field_147369_b.func_70608_bn() && this.field_147369_b.pistonClippingCounter == 0 && (!CarpetSettings.creativeNoClip || !field_147369_b.func_184812_l_()))
                             {
                                 boolean flag1 = worldserver.func_184144_a(this.field_147369_b, this.field_147369_b.func_174813_aQ().func_186664_h(0.0625D)).isEmpty();
 
@@ -721,7 +749,10 @@
         {
             if (this.field_184362_y == null && this.field_147369_b.func_70092_e((double)blockpos.func_177958_n() + 0.5D, (double)blockpos.func_177956_o() + 0.5D, (double)blockpos.func_177952_p() + 0.5D) < 64.0D && !this.field_147367_d.func_175579_a(worldserver, blockpos, this.field_147369_b) && worldserver.func_175723_af().func_177746_a(blockpos))
             {
+                if(carpet.carpetclient.CarpetClientChunkLogger.logger.enabled)
+                    carpet.carpetclient.CarpetClientChunkLogger.setReason("Player interacting with right click");
                 this.field_147369_b.field_71134_c.func_187251_a(this.field_147369_b, worldserver, itemstack, enumhand, blockpos, enumfacing, p_184337_1_.func_187026_d(), p_184337_1_.func_187025_e(), p_184337_1_.func_187020_f());
+                carpet.carpetclient.CarpetClientChunkLogger.resetReason();
             }
         }
         else
@@ -745,6 +776,7 @@
 
         if (!itemstack.func_190926_b())
         {
+            if (WorldEditBridge.onRightClickAir(worldserver, field_147369_b))
             this.field_147369_b.field_71134_c.func_187250_a(this.field_147369_b, worldserver, itemstack, enumhand);
         }
     }
@@ -1200,7 +1232,15 @@
                             }
                             else
                             {
-                                itemstack1.func_190917_f(i);
+                                // Crafting window duplication clitch fixed CARPET-XCOM
+                                if(!CarpetSettings.craftingWindowDuplicationFix || ItemStack.func_185132_d(itemstack, itemstack1) )
+                                {
+                                    itemstack1.func_190917_f(i);
+                                }
+                                else
+                                {
+                                    this.field_147369_b.func_71019_a(cpacketrecipeplacement$itemmove.field_192673_a, true);
+                                }
                             }
                         }
 
@@ -1732,13 +1772,14 @@
                     String s8 = packetbuffer5.func_150789_c(32);
                     tileentitystructure.func_184405_a(TileEntityStructure.Mode.valueOf(s8));
                     tileentitystructure.func_184404_a(packetbuffer5.func_150789_c(64));
-                    int i2 = MathHelper.func_76125_a(packetbuffer5.readInt(), -32, 32);
-                    int j2 = MathHelper.func_76125_a(packetbuffer5.readInt(), -32, 32);
-                    int k2 = MathHelper.func_76125_a(packetbuffer5.readInt(), -32, 32);
+                    int sbl = CarpetSettings.structureBlockLimit;
+                    int i2 = MathHelper.func_76125_a(packetbuffer5.readInt(), -sbl, sbl);
+                    int j2 = MathHelper.func_76125_a(packetbuffer5.readInt(), -sbl, sbl);
+                    int k2 = MathHelper.func_76125_a(packetbuffer5.readInt(), -sbl, sbl);
                     tileentitystructure.func_184414_b(new BlockPos(i2, j2, k2));
-                    int l2 = MathHelper.func_76125_a(packetbuffer5.readInt(), 0, 32);
-                    int i3 = MathHelper.func_76125_a(packetbuffer5.readInt(), 0, 32);
-                    int j = MathHelper.func_76125_a(packetbuffer5.readInt(), 0, 32);
+                    int l2 = MathHelper.func_76125_a(packetbuffer5.readInt(), 0, sbl);
+                    int i3 = MathHelper.func_76125_a(packetbuffer5.readInt(), 0, sbl);
+                    int j = MathHelper.func_76125_a(packetbuffer5.readInt(), 0, sbl);
                     tileentitystructure.func_184409_c(new BlockPos(l2, i3, j));
                     String s2 = packetbuffer5.func_150789_c(32);
                     tileentitystructure.func_184411_a(Mirror.valueOf(s2));
@@ -1775,6 +1816,17 @@
                         }
                         else
                         {
+                            boolean structureTooBig = false;
+                            Template template = field_147367_d.field_71305_c[0].func_184163_y().func_189942_b(field_147367_d, new ResourceLocation(s4));
+                            if (template != null)
+                            {
+                                BlockPos size = template.func_186259_a();
+                                if (size.func_177958_n() > sbl || size.func_177956_o() > sbl || size.func_177952_p() > sbl)
+                                    structureTooBig = true;
+                            }
+                            if (structureTooBig)
+                                field_147369_b.func_146105_b(new TextComponentString("Structure is too big for structure limit"), false);
+                            else
                             this.field_147369_b.func_146105_b(new TextComponentTranslation("structure_block.load_prepare", new Object[] {s4}), false);
                         }
                     }
@@ -1816,5 +1868,9 @@
                 field_147370_c.error("Couldn't pick item", (Throwable)exception);
             }
         }
+        else // CM handling all the packets from modders cheaters
+        {
+            CarpetServer.pluginChannels.process(this.field_147369_b, p_147349_1_);
+        }
     }
 }
