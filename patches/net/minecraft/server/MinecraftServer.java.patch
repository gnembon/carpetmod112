--- ../src-base/minecraft/net/minecraft/server/MinecraftServer.java
+++ ../src-work/minecraft/net/minecraft/server/MinecraftServer.java
@@ -1,5 +1,7 @@
 package net.minecraft.server;
 
+import carpet.helpers.ScoreboardDelta;
+import carpet.helpers.ThrowableSuppression;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Queues;
 import com.google.common.util.concurrent.Futures;
@@ -85,6 +87,14 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import carpet.CarpetServer;
+import carpet.CarpetSettings;
+import carpet.carpetclient.CarpetClientChunkLogger;
+import carpet.helpers.TickSpeed;
+import carpet.utils.CarpetProfiler;
+import carpet.utils.PistonFixes;
+import carpet.utils.TickingArea;
+
 public abstract class MinecraftServer implements ICommandSender, Runnable, IThreadListener, ISnooperInfo
 {
     private static final Logger field_147145_h = LogManager.getLogger();
@@ -143,6 +153,7 @@
 
     public MinecraftServer(File p_i47054_1_, Proxy p_i47054_2_, DataFixer p_i47054_3_, YggdrasilAuthenticationService p_i47054_4_, MinecraftSessionService p_i47054_5_, GameProfileRepository p_i47054_6_, PlayerProfileCache p_i47054_7_)
     {
+        CarpetServer.init(this); //CM init
         this.field_110456_c = p_i47054_2_;
         this.field_152364_T = p_i47054_4_;
         this.field_147143_S = p_i47054_5_;
@@ -272,6 +283,7 @@
 
         this.field_71318_t.func_72364_a(this.field_71305_c);
         this.func_147139_a(this.func_147135_j());
+        CarpetServer.onLoadAllWorlds(this);
         this.func_71222_d();
     }
 
@@ -284,6 +296,12 @@
         int i1 = 0;
         this.func_71192_d("menu.generatingTerrain");
         int j1 = 0;
+        if (CarpetSettings.tickingAreas)
+        {
+            TickingArea.initialChunkLoad(this, true);
+        }
+        if (!CarpetSettings.disableSpawnChunks)
+        {
         field_147145_h.info("Preparing start region for level 0");
         WorldServer worldserver = this.field_71305_c[0];
         BlockPos blockpos = worldserver.func_175694_M();
@@ -305,6 +323,7 @@
                 worldserver.func_72863_F().func_186025_d(blockpos.func_177958_n() + l1 >> 4, blockpos.func_177952_p() + i2 >> 4);
             }
         }
+        }
 
         this.func_71243_i();
     }
@@ -340,7 +359,7 @@
 
     public abstract boolean func_183002_r();
 
-    protected void func_71216_a_(String p_71216_1_, int p_71216_2_)
+    public void func_71216_a_(String p_71216_1_, int p_71216_2_) // CM changed visibility to public
     {
         this.field_71302_d = p_71216_1_;
         this.field_71303_e = p_71216_2_;
@@ -374,6 +393,7 @@
                 }
             }
         }
+        CarpetServer.onWorldsSaved(this);
     }
 
     protected void func_71260_j()
@@ -449,18 +469,33 @@
             {
                 this.field_175591_ab = func_130071_aq();
                 long i = 0L;
-                this.field_147147_p.func_151315_a(new TextComponentString(this.field_71286_C));
+                if ("_".equals(CarpetSettings.customMOTD))
+                    this.field_147147_p.func_151315_a(new TextComponentString(this.field_71286_C));
+                else
+                    this.field_147147_p.func_151315_a(new TextComponentString(CarpetSettings.customMOTD));
                 this.field_147147_p.func_151321_a(new ServerStatusResponse.Version("1.12", 335));
                 this.func_184107_a(this.field_147147_p);
 
                 while (this.field_71317_u)
                 {
+                    /* carpet mod commandTick */
+                    //todo check if this check is necessary
+                    if (TickSpeed.time_warp_start_time != 0)
+                    {
+                        if (TickSpeed.continueWarp())
+                        {
+                            this.func_71217_p();
+                            this.field_175591_ab = func_130071_aq();
+                            this.field_71296_Q = true;
+                        }
+                        continue;
+                    }
+                    /* end */
                     long k = func_130071_aq();
                     long j = k - this.field_175591_ab;
 
                     if (j > 2000L && this.field_175591_ab - this.field_71299_R >= 15000L)
                     {
-                        field_147145_h.warn("Can't keep up! Did the system time change, or is the server overloaded? Running {}ms behind, skipping {} tick(s)", Long.valueOf(j), Long.valueOf(j / 50L));
                         j = 2000L;
                         this.field_71299_R = this.field_175591_ab;
                     }
@@ -473,6 +508,7 @@
 
                     i += j;
                     this.field_175591_ab = k;
+                    boolean falling_behind = false;
 
                     if (this.field_71305_c[0].func_73056_e())
                     {
@@ -481,14 +517,33 @@
                     }
                     else
                     {
-                        while (i > 50L)
+                        boolean keeping_up = false;
+                        while (i > TickSpeed.mspt) /* carpet mod 50L */
                         {
-                            i -= 50L;
+                            i -= TickSpeed.mspt; /* carpet mod 50L */
+                            if (CarpetSettings.watchdogFix && keeping_up)
+                            {
+                                this.field_175591_ab = func_130071_aq();
+                                this.field_71296_Q = true;
+                                falling_behind = true;
+                            }
                             this.func_71217_p();
+                            keeping_up = true;
+                            if (CarpetSettings.disableVanillaTickWarp) {
+                                i = func_130071_aq() - k;
+                                break;
+                            }
                         }
                     }
 
-                    Thread.sleep(Math.max(1L, 50L - i));
+                    if (falling_behind)
+                    {
+                        Thread.sleep(1L); /* carpet mod 50L */
+                    }
+                    else
+                    {
+                        Thread.sleep(Math.max(1L, TickSpeed.mspt - i)); /* carpet mod 50L */
+                    }
                     this.field_71296_Q = true;
                 }
             }
@@ -592,6 +647,12 @@
     {
         long i = System.nanoTime();
         ++this.field_71315_w;
+    	
+        CarpetServer.tick(this);
+        if (CarpetProfiler.tick_health_requested != 0L)
+        {
+            CarpetProfiler.start_tick_profiling();
+        }
 
         if (this.field_71295_T)
         {
@@ -621,12 +682,17 @@
 
         if (this.field_71315_w % 900 == 0)
         {
+            CarpetProfiler.start_section(null, "Autosave");
             this.field_71304_b.func_76320_a("save");
             this.field_71318_t.func_72389_g();
+            if(carpet.carpetclient.CarpetClientChunkLogger.logger.enabled)
+                carpet.carpetclient.CarpetClientChunkLogger.setReason("Autosave queuing chunks for unloading");
             this.func_71267_a(true);
+            carpet.carpetclient.CarpetClientChunkLogger.resetReason();
             this.field_71304_b.func_76319_b();
+            CarpetProfiler.end_current_section();
         }
-
+        
         this.field_71304_b.func_76320_a("tallying");
         this.field_71311_j[this.field_71315_w % 100] = System.nanoTime() - i;
         this.field_71304_b.func_76319_b();
@@ -644,6 +710,20 @@
 
         this.field_71304_b.func_76319_b();
         this.field_71304_b.func_76319_b();
+        
+        // ChunkLogger - 0x-CARPET
+        if(CarpetClientChunkLogger.logger.enabled) {
+        	CarpetClientChunkLogger.logger.sendAll();
+        }
+        
+        if (CarpetProfiler.tick_health_requested != 0L)
+        {
+            CarpetProfiler.end_tick_profiling(this);
+        }
+
+        if(CarpetSettings.scoreboardDelta > 0 && field_71315_w % 20 == 0){
+            ScoreboardDelta.update();
+        }
     }
 
     public void func_71190_q()
@@ -685,8 +765,11 @@
                 catch (Throwable throwable1)
                 {
                     CrashReport crashreport = CrashReport.func_85055_a(throwable1, "Exception ticking world");
-                    worldserver.func_72914_a(crashreport);
-                    throw new ReportedException(crashreport);
+                    // Update Suppression crash fixes CARPET-XCOM
+                    if(!CarpetSettings.updateSuppressionCrashFix || !(crashreport.func_71505_b() instanceof ThrowableSuppression)){
+                        worldserver.func_72914_a(crashreport);
+                        throw new ReportedException(crashreport);
+                    }
                 }
 
                 try
@@ -696,8 +779,11 @@
                 catch (Throwable throwable)
                 {
                     CrashReport crashreport1 = CrashReport.func_85055_a(throwable, "Exception ticking world entities");
-                    worldserver.func_72914_a(crashreport1);
-                    throw new ReportedException(crashreport1);
+                    // Update Suppression crash fixes CARPET-XCOM
+                    if(!CarpetSettings.updateSuppressionCrashFix || !(crashreport1.func_71505_b() instanceof ThrowableSuppression)){
+                        worldserver.func_72914_a(crashreport1);
+                        throw new ReportedException(crashreport1);
+                    }
                 }
 
                 this.field_71304_b.func_76319_b();
@@ -710,10 +796,12 @@
             this.field_71312_k[j][this.field_71315_w % 100] = System.nanoTime() - i;
         }
 
+        CarpetProfiler.start_section(null, "Network");
         this.field_71304_b.func_76318_c("connection");
         this.func_147137_ag().func_151269_c();
         this.field_71304_b.func_76318_c("players");
         this.field_71318_t.func_72374_b();
+        CarpetProfiler.end_current_section();
         this.field_71304_b.func_76318_c("commandFunctions");
         this.func_193030_aL().func_73660_a();
         this.field_71304_b.func_76318_c("tickables");
@@ -724,6 +812,8 @@
         }
 
         this.field_71304_b.func_76319_b();
+
+        PistonFixes.onEndTick();
     }
 
     public boolean func_71255_r()
@@ -935,7 +1025,7 @@
 
     public String getServerModName()
     {
-        return "vanilla";
+        return "carpetmod";
     }
 
     public CrashReport func_71230_b(CrashReport p_71230_1_)
