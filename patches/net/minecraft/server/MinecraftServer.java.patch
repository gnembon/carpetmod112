--- ../src-base/minecraft/net/minecraft/server/MinecraftServer.java
+++ ../src-work/minecraft/net/minecraft/server/MinecraftServer.java
@@ -1,5 +1,8 @@
 package net.minecraft.server;
 
+import carpet.helpers.ScoreboardDelta;
+import carpet.helpers.ThrowableSuppression;
+import carpet.utils.Messenger;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Queues;
 import com.google.common.util.concurrent.Futures;
@@ -33,7 +36,6 @@
 import java.util.concurrent.Callable;
 import java.util.concurrent.Executors;
 import java.util.concurrent.FutureTask;
-import java.util.function.Supplier;
 import javax.annotation.Nullable;
 import javax.imageio.ImageIO;
 import net.minecraft.advancements.AdvancementManager;
@@ -86,6 +88,14 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import carpet.CarpetServer;
+import carpet.CarpetSettings;
+import carpet.carpetclient.CarpetClientChunkLogger;
+import carpet.helpers.TickSpeed;
+import carpet.utils.CarpetProfiler;
+import carpet.utils.PistonFixes;
+import carpet.utils.TickingArea;
+
 public abstract class MinecraftServer implements ICommandSender, Runnable, IThreadListener, ISnooperInfo
 {
     private static final Logger field_147145_h = LogManager.getLogger();
@@ -93,13 +103,12 @@
     private final ISaveFormat field_71310_m;
     private final Snooper field_71307_n = new Snooper("server", this, func_130071_aq());
     private final File field_71308_o;
-    private final List<ITickable> field_71322_p = Lists.<ITickable>newArrayList();
+    private final List<ITickable> field_71322_p = Lists.newArrayList();
     public final ICommandManager field_71321_q;
     public final Profiler field_71304_b = new Profiler();
     private final NetworkSystem field_147144_o;
     private final ServerStatusResponse field_147147_p = new ServerStatusResponse();
     private final Random field_147146_q = new Random();
-    private final DataFixer field_184112_s;
     private String field_71320_r;
     private int field_71319_s = -1;
     public WorldServer[] field_71305_c;
@@ -128,24 +137,21 @@
     private boolean field_71289_N;
     private String field_147141_M = "";
     private String field_175588_P = "";
-    private boolean field_71296_Q;
     private long field_71299_R;
-    private String field_71298_S;
     private boolean field_71295_T;
     private boolean field_104057_T;
-    private final YggdrasilAuthenticationService field_152364_T;
     private final MinecraftSessionService field_147143_S;
     private final GameProfileRepository field_152365_W;
     private final PlayerProfileCache field_152366_X;
     private long field_147142_T;
-    protected final Queue < FutureTask<? >> field_175589_i = Queues. < FutureTask<? >> newArrayDeque();
+    protected final Queue < FutureTask<? >> field_175589_i = Queues.newArrayDeque();
     private Thread field_175590_aa;
     private long field_175591_ab = func_130071_aq();
 
     public MinecraftServer(File p_i47054_1_, Proxy p_i47054_2_, DataFixer p_i47054_3_, YggdrasilAuthenticationService p_i47054_4_, MinecraftSessionService p_i47054_5_, GameProfileRepository p_i47054_6_, PlayerProfileCache p_i47054_7_)
     {
+        CarpetServer.init(this); //CM init
         this.field_110456_c = p_i47054_2_;
-        this.field_152364_T = p_i47054_4_;
         this.field_147143_S = p_i47054_5_;
         this.field_152365_W = p_i47054_6_;
         this.field_152366_X = p_i47054_7_;
@@ -153,7 +159,6 @@
         this.field_147144_o = new NetworkSystem(this);
         this.field_71321_q = this.func_175582_h();
         this.field_71310_m = new AnvilSaveConverter(p_i47054_1_, p_i47054_3_);
-        this.field_184112_s = p_i47054_3_;
     }
 
     protected ServerCommandManager func_175582_h()
@@ -180,7 +185,7 @@
                     if (System.currentTimeMillis() - this.field_96245_b >= 1000L)
                     {
                         this.field_96245_b = System.currentTimeMillis();
-                        MinecraftServer.field_147145_h.info("Converting... {}%", (int)p_73718_1_);
+                        field_147145_h.info("Converting... {}%", p_73718_1_);
                     }
                 }
                 public void func_73719_c(String p_73719_1_)
@@ -192,7 +197,6 @@
 
     protected synchronized void func_71192_d(String p_71192_1_)
     {
-        this.field_71298_S = p_71192_1_;
     }
 
     public void func_71247_a(String p_71247_1_, String p_71247_2_, long p_71247_3_, WorldType p_71247_5_, String p_71247_6_)
@@ -249,14 +253,14 @@
             {
                 if (this.func_71242_L())
                 {
-                    this.field_71305_c[i] = (WorldServer)(new WorldServerDemo(this, isavehandler, worldinfo, j, this.field_71304_b)).func_175643_b();
+                    this.field_71305_c[0] = (WorldServer)(new WorldServerDemo(this, isavehandler, worldinfo, j, this.field_71304_b)).func_175643_b();
                 }
                 else
                 {
-                    this.field_71305_c[i] = (WorldServer)(new WorldServer(this, isavehandler, worldinfo, j, this.field_71304_b)).func_175643_b();
+                    this.field_71305_c[0] = (WorldServer)(new WorldServer(this, isavehandler, worldinfo, j, this.field_71304_b)).func_175643_b();
                 }
 
-                this.field_71305_c[i].func_72963_a(worldsettings);
+                this.field_71305_c[0].func_72963_a(worldsettings);
             }
             else
             {
@@ -273,37 +277,41 @@
 
         this.field_71318_t.func_72364_a(this.field_71305_c);
         this.func_147139_a(this.func_147135_j());
+        CarpetServer.onLoadAllWorlds(this);
         this.func_71222_d();
+        CarpetServer.loadBots(this);
     }
 
     protected void func_71222_d()
     {
-        int i = 16;
-        int j = 4;
-        int k = 192;
-        int l = 625;
         int i1 = 0;
         this.func_71192_d("menu.generatingTerrain");
-        int j1 = 0;
-        field_147145_h.info("Preparing start region for level 0");
-        WorldServer worldserver = this.field_71305_c[0];
-        BlockPos blockpos = worldserver.func_175694_M();
-        long k1 = func_130071_aq();
-
-        for (int l1 = -192; l1 <= 192 && this.func_71278_l(); l1 += 16)
+        if (CarpetSettings.tickingAreas)
         {
-            for (int i2 = -192; i2 <= 192 && this.func_71278_l(); i2 += 16)
-            {
-                long j2 = func_130071_aq();
+            TickingArea.initialChunkLoad(this, true);
+        }
+        if (!CarpetSettings.disableSpawnChunks)
+        {
+            field_147145_h.info("Preparing start region for level 0");
+            WorldServer worldserver = this.field_71305_c[0];
+            BlockPos blockpos = worldserver.func_175694_M();
+            long k1 = func_130071_aq();
 
-                if (j2 - k1 > 1000L)
+            for (int l1 = -192; l1 <= 192 && this.func_71278_l(); l1 += 16)
+            {
+                for (int i2 = -192; i2 <= 192 && this.func_71278_l(); i2 += 16)
                 {
-                    this.func_71216_a_("Preparing spawn area", i1 * 100 / 625);
-                    k1 = j2;
-                }
+                    long j2 = func_130071_aq();
 
-                ++i1;
-                worldserver.func_72863_F().func_186025_d(blockpos.func_177958_n() + l1 >> 4, blockpos.func_177952_p() + i2 >> 4);
+                    if (j2 - k1 > 1000L)
+                    {
+                        this.func_71216_a_("Preparing spawn area", i1 * 100 / 625);
+                        k1 = j2;
+                    }
+
+                    ++i1;
+                    worldserver.func_72863_F().func_186025_d(blockpos.func_177958_n() + l1 >> 4, blockpos.func_177952_p() + i2 >> 4);
+                }
             }
         }
 
@@ -322,7 +330,7 @@
             }
             catch (UnsupportedEncodingException var5)
             {
-                field_147145_h.warn("Something went wrong url encoding {}", (Object)p_175584_1_);
+                field_147145_h.warn("Something went wrong url encoding {}", p_175584_1_);
             }
         }
     }
@@ -341,7 +349,7 @@
 
     public abstract boolean func_183002_r();
 
-    protected void func_71216_a_(String p_71216_1_, int p_71216_2_)
+    public void func_71216_a_(String p_71216_1_, int p_71216_2_) // CM changed visibility to public
     {
         this.field_71302_d = p_71216_1_;
         this.field_71303_e = p_71216_2_;
@@ -375,6 +383,7 @@
                 }
             }
         }
+        CarpetServer.onWorldsSaved(this);
     }
 
     protected void func_71260_j()
@@ -389,6 +398,8 @@
         if (this.field_71318_t != null)
         {
             field_147145_h.info("Saving players");
+            this.field_71318_t.removeBotTeam();
+            this.field_71318_t.storeFakePlayerData();
             this.field_71318_t.func_72389_g();
             this.field_71318_t.func_72392_r();
         }
@@ -450,18 +461,32 @@
             {
                 this.field_175591_ab = func_130071_aq();
                 long i = 0L;
-                this.field_147147_p.func_151315_a(new TextComponentString(this.field_71286_C));
+                if ("_".equals(CarpetSettings.customMOTD))
+                    this.field_147147_p.func_151315_a(new TextComponentString(this.field_71286_C));
+                else
+                    this.field_147147_p.func_151315_a(new TextComponentString(CarpetSettings.customMOTD));
                 this.field_147147_p.func_151321_a(new ServerStatusResponse.Version("1.12.2", 340));
                 this.func_184107_a(this.field_147147_p);
 
                 while (this.field_71317_u)
                 {
+                    /* carpet mod commandTick */
+                    //todo check if this check is necessary
+                    if (TickSpeed.time_warp_start_time != 0)
+                    {
+                        if (TickSpeed.continueWarp())
+                        {
+                            this.func_71217_p();
+                            this.field_175591_ab = func_130071_aq();
+                        }
+                        continue;
+                    }
+                    /* end */
                     long k = func_130071_aq();
                     long j = k - this.field_175591_ab;
 
                     if (j > 2000L && this.field_175591_ab - this.field_71299_R >= 15000L)
                     {
-                        field_147145_h.warn("Can't keep up! Did the system time change, or is the server overloaded? Running {}ms behind, skipping {} tick(s)", Long.valueOf(j), Long.valueOf(j / 50L));
                         j = 2000L;
                         this.field_71299_R = this.field_175591_ab;
                     }
@@ -474,6 +499,7 @@
 
                     i += j;
                     this.field_175591_ab = k;
+                    boolean falling_behind = false;
 
                     if (this.field_71305_c[0].func_73056_e())
                     {
@@ -482,15 +508,32 @@
                     }
                     else
                     {
-                        while (i > 50L)
+                        boolean keeping_up = false;
+                        while (i > TickSpeed.mspt) /* carpet mod 50L */
                         {
-                            i -= 50L;
+                            i -= TickSpeed.mspt; /* carpet mod 50L */
+                            if (CarpetSettings.watchdogFix && keeping_up)
+                            {
+                                this.field_175591_ab = func_130071_aq();
+                                falling_behind = true;
+                            }
                             this.func_71217_p();
+                            keeping_up = true;
+                            if (CarpetSettings.disableVanillaTickWarp) {
+                                i = func_130071_aq() - k;
+                                break;
+                            }
                         }
                     }
 
-                    Thread.sleep(Math.max(1L, 50L - i));
-                    this.field_71296_Q = true;
+                    if (falling_behind)
+                    {
+                        Thread.sleep(1L); /* carpet mod 50L */
+                    }
+                    else
+                    {
+                        Thread.sleep(Math.max(1L, TickSpeed.mspt - i)); /* carpet mod 50L */
+                    }
                 }
             }
             else
@@ -594,6 +637,12 @@
         long i = System.nanoTime();
         ++this.field_71315_w;
 
+        CarpetServer.tick(this);
+        if (CarpetProfiler.tick_health_requested != 0L)
+        {
+            CarpetProfiler.start_tick_profiling();
+        }
+
         if (this.field_71295_T)
         {
             this.field_71295_T = false;
@@ -622,10 +671,16 @@
 
         if (this.field_71315_w % 900 == 0)
         {
+            CarpetProfiler.start_section(null, "Autosave");
             this.field_71304_b.func_76320_a("save");
+            this.field_71318_t.storeFakePlayerData();
             this.field_71318_t.func_72389_g();
+            if(carpet.carpetclient.CarpetClientChunkLogger.logger.enabled)
+                carpet.carpetclient.CarpetClientChunkLogger.setReason("Autosave queuing chunks for unloading");
             this.func_71267_a(true);
+            carpet.carpetclient.CarpetClientChunkLogger.resetReason();
             this.field_71304_b.func_76319_b();
+            CarpetProfiler.end_current_section();
         }
 
         this.field_71304_b.func_76320_a("tallying");
@@ -645,6 +700,20 @@
 
         this.field_71304_b.func_76319_b();
         this.field_71304_b.func_76319_b();
+
+        // ChunkLogger - 0x-CARPET
+        if(CarpetClientChunkLogger.logger.enabled) {
+            CarpetClientChunkLogger.logger.sendAll();
+        }
+
+        if (CarpetProfiler.tick_health_requested != 0L)
+        {
+            CarpetProfiler.end_tick_profiling(this);
+        }
+
+        if(CarpetSettings.scoreboardDelta > 0 && field_71315_w % 20 == 0){
+            ScoreboardDelta.update();
+        }
     }
 
     public void func_71190_q()
@@ -686,22 +755,38 @@
                 {
                     worldserver.func_72835_b();
                 }
+                catch (ThrowableSuppression e)
+                {
+                    Messenger.print_server_message(this, "You just caused a server crash in world tick.");
+                }
                 catch (Throwable throwable1)
                 {
                     CrashReport crashreport = CrashReport.func_85055_a(throwable1, "Exception ticking world");
                     worldserver.func_72914_a(crashreport);
-                    throw new ReportedException(crashreport);
+                    if(!CarpetSettings.updateSuppressionCrashFix || !(crashreport.func_71505_b() instanceof ThrowableSuppression) ) {
+                        throw new ReportedException(crashreport);
+                    } else {
+                        Messenger.print_server_message(this, "You just caused a server crash in world tick.");
+                    }
                 }
 
                 try
                 {
                     worldserver.func_72939_s();
                 }
+                catch (ThrowableSuppression e)
+                {
+                    Messenger.print_server_message(this, "You just caused a server crash in update entities.");
+                }
                 catch (Throwable throwable)
                 {
                     CrashReport crashreport1 = CrashReport.func_85055_a(throwable, "Exception ticking world entities");
                     worldserver.func_72914_a(crashreport1);
-                    throw new ReportedException(crashreport1);
+                    if(!CarpetSettings.updateSuppressionCrashFix || !(crashreport1.func_71505_b() instanceof ThrowableSuppression) ) {
+                        throw new ReportedException(crashreport1);
+                    } else {
+                        Messenger.print_server_message(this, "You just caused a server crash in update entities.");
+                    }
                 }
 
                 this.field_71304_b.func_76319_b();
@@ -714,10 +799,12 @@
             this.field_71312_k[j][this.field_71315_w % 100] = System.nanoTime() - i;
         }
 
+        CarpetProfiler.start_section(null, "Network");
         this.field_71304_b.func_76318_c("connection");
         this.func_147137_ag().func_151269_c();
         this.field_71304_b.func_76318_c("players");
         this.field_71318_t.func_72374_b();
+        CarpetProfiler.end_current_section();
         this.field_71304_b.func_76318_c("commandFunctions");
         this.func_193030_aL().func_73660_a();
         this.field_71304_b.func_76318_c("tickables");
@@ -728,6 +815,8 @@
         }
 
         this.field_71304_b.func_76319_b();
+
+        PistonFixes.onEndTick();
     }
 
     public boolean func_71255_r()
@@ -772,7 +861,7 @@
                         }
                         catch (NumberFormatException var13)
                         {
-                            ;
+
                         }
                     }
                     else if ("--singleplayer".equals(s3) && s4 != null)
@@ -939,7 +1028,7 @@
 
     public String getServerModName()
     {
-        return "vanilla";
+        return "carpetmod";
     }
 
     public CrashReport func_71230_b(CrashReport p_71230_1_)
@@ -968,7 +1057,7 @@
 
     public List<String> func_184104_a(ICommandSender p_184104_1_, String p_184104_2_, @Nullable BlockPos p_184104_3_, boolean p_184104_4_)
     {
-        List<String> list = Lists.<String>newArrayList();
+        List<String> list = Lists.newArrayList();
         boolean flag = p_184104_2_.startsWith("/");
 
         if (flag)
@@ -1446,7 +1535,7 @@
 
         if (!this.func_152345_ab() && !this.func_71241_aa())
         {
-            ListenableFutureTask<V> listenablefuturetask = ListenableFutureTask.<V>create(p_175586_1_);
+            ListenableFutureTask<V> listenablefuturetask = ListenableFutureTask.create(p_175586_1_);
 
             synchronized (this.field_175589_i)
             {
@@ -1458,7 +1547,7 @@
         {
             try
             {
-                return Futures.<V>immediateFuture(p_175586_1_.call());
+                return Futures.immediateFuture(p_175586_1_.call());
             }
             catch (Exception exception)
             {
